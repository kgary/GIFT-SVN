/*** GIFT CUSTOMIZED STYLES BELOW ****/
/* This css sheet is used to define any custom gift dashboard styles that may be needed. */


/* Style controls the course upper panel on the course widget */
.courseUpperPanel {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 70%;
  z-index: 10;
  
  background-color: rgba(0, 0, 0, 0.60);
}

/* Style controls the style of the progress meter on the course widget */
.courseProgress {
  position: relative;
  margin-top:105px;
  height:15px;
  width:100%
}

/* Style controls the opaque course lower panel on the course widget */
.courseLowerPanelOpaque{

  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 30%;
  z-index: 10;
  background-color: rgba(255, 255, 255, 1.0);
  
}

/* Style controls the lower course panel overlay (the small icons) on the course widget */
.courseLowerPanelOverlay {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 30%;
  
}

/* Style controls the check box on the course widget when in selection mode*/
.courseCheckBox{
	
	position: absolute;
	top: 5px;
	left: 5px;
	margin: 0px !important;
	padding: 0px !important;
	
	/* Making the checkbox larger requires that we use the 'transform' property to scale the checkbox up. */
	-ms-transform: scale(2); /* IE */
	-moz-transform: scale(2); /* FF */
	-webkit-transform: scale(2); /* Safari and Chrome */
	-o-transform: scale(2); /* Opera */
	transform: scale(2,2);
}

/* Style controls the overall course widget on the "my courses" panel. */
.courseWidgetStyle {
  display: inline-block;
				
  position: relative;
  text-align: center;
  margin-top: 5px;
  margin-bottom: 5px;
  margin-left: auto;
  margin-right: 10px;
  
  max-height: 180px;
  max-width: 280px;
  min-width: 280px;
  min-height: 180px;
 
  /* Removes the padding style if wrapped in a div */
  padding-left:0px;
  padding-right:0px;
}

/* Controls the overall course image style of the course widget (my courses panel) */
.courseImage {
  position: relative;
  width: 100%;
  height: 100%;
  padding-top: 5px;
  padding-bottom: 5px;
  padding-right: 5px;
  padding-left: 5px;
}

/* Anchors a course icon to the top left of a container */
.courseAnchorTopLeft {
  position: absolute;
  top: 0;
  left: 0;
  padding: 1px;
}

/* Anchors a course icon to the top right of a container */
.courseAnchorTopRight{
  position: absolute;
  top: 0;
  right: 0;
  padding: 1px;
}

/* Anchors a course icon to the bottom left of a container */
.courseAnchorBottomLeft{
  position: absolute;
  bottom: 0;
  left: 0;
  padding: 1px;
}

/* Anchors a course icon to the bottom right of a container */
.courseAnchorBottomRight{
  position: absolute;
  bottom: 0;
  right: 0;
  padding: 1px;
}

/* Adds some padding between the course icons */
.courseIconPadding {
  margin-left: 10px;
}
/* Helps to center the start button on the course widget Requires CSS3 browsers */
.courseStartButton {
  position: absolute;
  top: calc(50% - 25px);
  left: calc(50% - 60px);
  width: 120px;
  height: 50px;

}

/* This is a 'dummy' style that is needed for IE to make sure that the <div> element 
   has something to render.  Without this the fade transition breaks in IE.
*/
.courseDummy {
   position: absolute;
   top: 0;
   left: 0;
   width: 100%;
   height: 100%;
   z-index:15;
}

/* A dummy style for a selectable course */
.courseDummySelectable{
	position: absolute;
   	top: 0;
   	left: 0;
   	width: 100%;
   	height: 100%;
   	z-index:15;
	border: dashed rgb(200, 200, 255);
	background-color: rgba(255,255,255, 0.2);
	cursor: pointer;
}

/* Hover effect for selectable course */
.courseDummySelectable:hover{
	border: solid rgb(100, 100, 255) 5px;
}

/* Style for a course that has been selected*/
.courseDummySelected{
	border: outset rgb(125, 125, 255) 5px;
	background-color: rgba(100,100,255, 0.3);
}

/* Hover (Fade-In/Fade-Out) effect used for the course overlay on the course widgets */
.courseHover {
    z-index:15;
    opacity: 0.0;
    -moz-transition: opacity .25s ease-in-out;
    -webkit-transition: opacity .25s ease-in-out;
    transition: opacity .25s ease-in-out;
}
.courseHover:hover {
    z-index:15;
    opacity: 1.0; 
    -moz-transition: opacity .30s ease-in-out;
    -webkit-transition: opacity .30s ease-in-out;
    transition: opacity .30s ease-in-out;
}
/* Used for the style of the validation spinner on the course widget */
.courseValidateSpinner {
   position:relative;
   margin:10px;
   left: calc(50% - 18px);
}

/* Used for a subheader within a main category (ie the sub navbar widget under "My Course" panel) */
.headerBar{
	position: static;
	margin: 0px;
}

.subHeader {
  position:static;
  left:0;
  top: 52px;
  z-index:20;
  width:100%;
  margin: 0px;
  border-radius: 0px;
}
/* Used to ensure the main navbar stays in front of the other submenus. */
.navBarZOrder {
   z-index:30;
}

/* Used to ensure that the subHeader contents display properly below the subHeader */
.subHeaderContents {
  position: static;
  margin: 0px;
  overflow: auto;
}
/* Used to display a background image on the login screen */
.loginBackground {
 
 position: absolute;
 left:0;
 top:0;
 bottom:0;
 right:0;
 background-size:cover;
 z-index:-1;
 
}

/* Define the area of the two column layout in the mystats panel. */
.statsBox {
    bottom: 0; 
    left: 0;
    position: absolute;
    right: 0;
    top: 104px;
    padding: 0px;
}

/* Specify a fixed size for the course history filter image */
.courseHistoryImage {
    width:235px;
    height:190px;
}

/* Specify a font size of the course grade text */
.courseGradeTextSize {
  font-size: 18px;
}

/* Specifies a width of the linked group (list group) that the course filter widgets are placed in. This should be bigger than the .courseHistoryImage size */
.courseFilterListSize {
  margin: 0px;
}

.courseFilterListEntry{
	background-color: white;
    background-image: linear-gradient(white, rgb(230,230,230));
    color: black;
    margin-bottom: 15px;
    border: 1px solid rgb(200, 200, 200);
    border-radius: 10px;
    position: relative;
}

.courseFilterListEntryHeader{
    background-color: white;
    background-image: linear-gradient(white, rgb(230,230,230));
    padding: 10px;
    border: 1px solid rgb(200, 200, 200);
    border-radius: 10px;
    box-shadow: 0px 3px 10px rgba(0,0,0,0.1);
    cursor: pointer;
}

.courseFilterListEntryHeader:hover{
	margin: -2px 0px 2px;
}

.courseFilterListEntrySelected{
	border: 2px solid rgb(200,200,255);
	background-color: rgb(240, 240, 255);
    background-image: linear-gradient(white, rgb(240, 240, 255));
}

.courseHistoryRowStyle{
	cursor: pointer;
}

.courseHistoryRowStyle > td{
	padding: 4px;
}

.courseHistoryRowStyle:hover > td{
	padding: 3px 4px 5px;
}

.courseHistoryRowButton{
	padding: 3px 7px;
	margin-right: 20px
}

.courseHistoryRowButton > i{
	margin-right: 4px;
}

/* Specifies the style for the close icon on the course details screen. */
.courseDetailsCloseIcon {
  position: absolute;
  top: 0;
  right: 0;
  margin-right: 20px;
}

/* Specifies the style for the course id field on the course details panel */
.courseDetailsIdStyle {
  padding-top:1px;
}

/* Specifies the style for the column on the left side of the course details page */
.courseDetailsColumn{
	width: 200px;
}

/* Specifies the style for the close icon on the course export screen. */
.courseExportCloseIcon {
  position: relative;
  top: 0;
  right: 0;
  margin: 0px;
  padding: 1px;
}

/* Specifies the width of the container for the course widget on the course details screen. */
.courseDetailsCourseContainer {
  width: 100%
}

/* Allows various containers/widgets to have a custom background color that we can control globally here. */
.giftBackgroundColor{
    background-color: #2e3338;
}

/* The color of the text if using the darker background */
.giftBackgroundText {
    color: #c8c8c8;
}

.gameMasterHeaderButton {
	cursor: pointer;
    color: #5e5e5e !important;
    padding: 2px 5px;
	outline: none !important;
}
.gameMasterHeaderButton:hover {
    background: #d5d5d5;
    border-radius: 10px;
    color: inherit !important;
}
.gameMasterHeaderButton:focus {
	color: inherit !important;
}
.gameMasterHeaderButton.giftSelectedButtonColor {
    color: #3399f3 !important;
}
.gameMasterHeaderButton.giftSelectedButtonColor:hover, .gameMasterHeaderButton.giftSelectedButtonColor:focus {
	color: #3399f3 !important;
}
.gameMasterHeaderButton.infoButtonSelected {
	background: lightgray;
	border-style: solid;
	border-width:thin;
	border-radius:10px;
}

/* Allows for a container to fill the the remainder of the screen.  Used in places where we have the custom
   darker background, so we can ensure the darker background fills up the screen properly.
 */
.giftFillBackground {
    position: absolute;
    width:100%;
    height:100%;
}

/* Allows for a container to fill the the remainder of the screen (using fixed position).  Used in places where we have the custom
   darker background, so we can ensure the darker background fills up the screen properly.
 */
.giftFillBackgroundFixed {
    position: fixed;
    width:100%;
    height:100%;
}

/* Used to help vertically center the gift icon in the navbars headers */
.headerIconAdjustment {
   position:relative;
   top: -5px;
}

/* Makes the header text white to indicate that the header is selected */
.headerSelected {
	color: #ffffff !important;
}

/* Makes the session list choice blue to indicate that the choice is selected */
.sessionListItemSelectedColor > a {
    color: #3399f3 !important;
}

/* OVERRIDE -
 * This overrides the bootstrap .popover-content style
 * Used to control the text color for panels where we apply the darker theme to ensure the text color is unaffected.
 */
.popover-content {
  padding: 9px 14px;
  color: #666666;
}

/* Style for the course list in the export courses dialog*/
.exportCoursesDialogCourseList{
	overflow: auto;
	max-height: 200px;
	width: 100%;
}

/* Styles the iframe in the dashboard's modal dialogs so that they can be visible above other iframes */
.modalFrame {
    border: none;
    position: absolute;
    top: 0px;
    left: 0px;
    height: 100%;
    width: 100%;
    z-index: -1;
}

/* Styles leaf nodes in the GAT file tree. GWT's tree styling assigns misaligned margins to leaf nodes, so this style fixes the margins */
.treeLeaf{
	margin-left: -7px;
}

/* Styles tree items for locked files in the GAT file tree */
.treeItemLocked{
	background-color: rgba(200,200,200, 0.5);
}

/* Styles an element to make its text unselectable */
.unselectable {
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

/* Styles the checkbox used to have the user accept the Terms & Conditions on the login screen */
.loginCheckboxStyle {
    margin-top:-20px;
}

/** Styles experiment widgets in the My Experiments page */
.experimentPanel{
	color: white;
	text-shadow: 2px 2px 3px rgba(0,0,0,0.5);
	border-radius: 5px;
	box-shadow: 3px 3px 5px rgba(0,0,0,0.25);
	margin: 15px;	
	padding: 5px;
	transition: all 0.5s ease;
}

/** Styles experiment widgets for active experiments in the My Experiments page */
.experimentActivePanel{	
	background-color: rgb(0, 175, 75);
	background-image: linear-gradient(rgb(0, 175, 75), rgb(0,75,0));
}

/** Styles experiment widgets for paused experiments in the My Experiments page */
.experimentPausedPanel{
	background-color: rgb(100,0,0);
	background-image: linear-gradient(rgb(200,75,0), rgb(100,0,0));
}

.experimentEndedPanel {
    background-color:rgb(0,0,100);
    background-image:linear-gradient(rgb(50,100,200), rgb(0, 0, 100));
}

/** Styles the collection widgets in the My Experiments page */
.experimentCollectionPanel {
	background-color: rgb(3, 216, 188);
    background-image: linear-gradient(rgb(3, 216, 188), rgb(0, 107, 93));
}

.publishTypeButtonAlone {
	border-radius: 4px !important;
}

/** Styles the content area inside experiment widgets */
.experimentContent{
	color: black;
	border: solid 1px gray;
	background-color: white;
	background-image: linear-gradient(white, rgb(220,220,220));
	text-shadow: none;
	margin-top: 5px;
	border-radius: 2px;
	padding: 10px 5px 0px 5px;
}

/** Styles the course widgets used in the MyExperiments page*/
.experimentCoursePanel{
	padding: 5px;
	border: 1px solid rgb(150, 150,150);
	border-radius: 3px;
	box-shadow: 2px 2px 3px rgba(0,0,0,0.5);
	margin-bottom: 3px;
}

/** Styles the course widgets for valid courses in the MyExperiments page*/
.experimentCourseValid{
	background-color: white;
	background-image: linear-gradient(white, rgb(235,235,245));
}

/** Styles the course widgets for invalid courses in the MyExperiments page*/
.experimentCourseInvalid{
	background-color: lightGray;
	background-image: linear-gradient(rgb(230,230,230), lightGray);
}

/** Styles the course widgets for validating courses in the MyExperiments page*/
.experimentCourseValidating{
	background-color: black !important;
	background-image: linear-gradient(rgb(50,50,50), black) !important;
	color: white !important;
}

/** Styles the dialogs used to create experiments in the MyExperiments page*/
.experimentCreateDialog{
	
}
.experimentCreateDialog > .modal-dialog{
	width: 1000px;
	max-width: 100%;
	height: 90%;
	margin-top: 10px;
	margin-bottom: 0px;
}
.experimentCreateDialog > .modal-dialog > .modal-content{
	height: 100%;
}

/** Styles the dialogs used to edit experiments in the MyExperiments page*/
.experimentEditDialog {
	
}
.experimentEditDialog > .modal-dialog{
    width: 1000px;
    max-width: 100%;
    height: 90%;
    margin-top: 10px;
    margin-bottom: 0px;
}

/** Styles the dialog used to build experiment reports in the My Experiments page */
.buildExperimentReportDialog{
	
}
.buildExperimentReportDialog > .modal-dialog{
	width: 100%;
	height: 100%;
	margin: 0px;
	padding: 20px;
}
.buildExperimentReportDialog > .modal-dialog > .modal-content{
	height: 100%;
}

/** Styles the dialogs used to edit collections in the MyExperiments page*/
.editCollectionDialogHeader{
    
}
.editCollectionDialogHeader > .modal-dialog{
    width: 1000px;
    max-width: 100%;
    height: 90%;
    margin-top: 10px;
    margin-bottom: 0px;
}

/** Styles the dialog used for help messages */
.helpDialog{

}
.helpDialog > .modal-dialog{
	max-width: 100%;
	max-height: 100%;
}
.helpDialog > .modal-dialog > .modal-content{
	max-height: 100%;
	background-image: linear-gradient(white, rgb(255,255,220));
	bacgkround-color: rgb(255,255,245);
}

/** Changes the cursor to indicate that an element can be clicked on */
.clickable{
	cursor: pointer;
}

/** 
    the z-index values for PopupPanelGlass and PopupPanel should be the same or greater than DialogBox in order for the layered popuppanel
    and glass'ing (graying out underneath popuppanel) to work correctly when using mil.arl.gift.common.gwt.client.widgets.bootstrap.DetailsDialogBox
    and mil.arl.gift.tools.dashboard.client.bootstrap.ErrorDetailsDialogWidget from the Dashboard 
    It appears these 3 zindex values need to be larger than popover z-index css value (currently set in sandstone.css, slate.css, spacelab.css) 
*/
.gwt-DialogBox {
    z-index: 1061;
}
.gwt-PopupPanel {
    z-index: 1061;
}
.gwt-PopupPanelGlass {
	
	background-color: #000;
	opacity: 0.3;
	filter: alpha(opacity=30);
	z-index: 1061;
}

/** Resizes html headers in the error details dialog */
.detailsHtml h1, .detailsHtml h2, .detailsHtml h3{
	font-size: 20px !important;
}

/** The style used to distinguish entities in the game master map */
.mapEntity{
    box-sizing: content-box;
    overflow: visible !important;
}

/** A style used to ensure that all map entity icons are centered over their positions in the map */
.mapEntity > img{
    margin-top: 50% !important;
}

/** A style used to show names next to map entities that possess a name */
.mapEntity[entity-name]::before {
    content: attr(entity-name);
    position: absolute;
    right: 100%;
    bottom: 0px;
    color: white;
    border-radius: 0px 5px 5px 5px;
    white-space: pre;
    margin-right: 5px;
    font-weight: bold;
    text-shadow: -1px -1px 1px #000,
        1px -1px 1px #000,
        -1px 1px 1px #000,
        1px 1px 1px #000;
    font-size: 13px;
}

/** The style used to distinguish selected entities in the game master map */
.mapEntitySelected{
    filter: drop-shadow(2px 2px 5px black);
}
.mapEntitySelected > img{
    animation: mapEntitySelectedFlash 2s infinite;
}

/** An animation that plays a periodic pulsing effect for a selected entity in the game master map */
@keyframes mapEntitySelectedFlash{
  0% {filter: drop-shadow(0px 0px 5px blue);}
  50% {filter: drop-shadow(0px 0px 10px rgb(200,200,255));}
  100% {filter: drop-shadow(0px 0px 5px blue);}
}

/** A style used to show a label next to selected entities that possess label data */
.mapEntitySelected[entity-data-label]::after {
    content: attr(entity-data-label);
    position: absolute;
    left: 100%;
    background-color: rgba(0,0,0,0.5);
    color: white;
    border-radius: 0px 5px 5px 5px;
    padding: 5px;
    white-space: pre;
    margin-left: 5px;
    border: 1px solid black;
    text-shadow: 1px 1px black;
}

/** A style used by the button in Game Master used to start playing back an active session */
.gmEndSessionJumpBtn{
	width: 30px;
	height: 30px;
	padding: 0px;
	margin: -10px 5px;
	background-image: linear-gradient(white, transparent, #777);
	color: white;
	animation: gmEndSessionJumpBtnAnim 2s infinite;
	border: 1px solid #444 !important;
}

@keyframes gmEndSessionJumpBtnAnim{
    0% {background-color: black;}
    50% {background-color: #bb0;}
    100% {background-color: black;}
}
