<!DOCTYPE ui:UiBinder SYSTEM "http://dl.google.com/gwt/DTD/xhtml.ent">
<ui:UiBinder xmlns:ui="urn:ui:com.google.gwt.uibinder"
             xmlns:g="urn:import:com.google.gwt.user.client.ui"
             xmlns:b="urn:import:org.gwtbootstrap3.client.ui"
             xmlns:b.html="urn:import:org.gwtbootstrap3.client.ui.html"
             xmlns:w='urn:import:mil.arl.gift.common.gwt.client.widgets.bootstrap'>
	<ui:style>	
		.mainContainer{
			padding: 0px;
		}
		.toolContainer{
			margin: 0px;
		}
		.asatHeader{
			padding-top: 10px;
			padding-bottom: 30px;
		}
		.asatButton{
			font-size: 18px;
		}
		.trademHeader{
			font-size: 46px;
			padding-top: 50px;
			font-weight: bold;
			font-style: italic;
			text-decoration: underline;
			text-shadow: 10px 10px 5px rgba(0,0,0,0.3);
			padding-bottom: 30px;
		}
		.welcomeTextHeader{
			color: rgb(100, 75, 75);
			text-shadow: 0px 3px 0px rgba(0,0,0,0.2);
			font-weight: bold;
			font-size: 40px;
			margin-top: -20px;
		}
		.welcomeTextSub{
			color: rgb(125, 125, 125);
			font-size: 20px;
			margin-bottom: 10px;
			max-width: 600px;
		}
		.welcomeBackground{
			position: absolute;
			background: rgb(237, 237, 237);
		}
	</ui:style>
    <!-- This UI Binder uses gwtbootstrap3.  For more information on GwtBootstrap3 see:  https://github.com/gwtbootstrap3/gwtbootstrap3
         The UI Binder should drive the 'layout' of the widget and typically will be wrapped in a 'container' object.   
         
         It is best practice to not specify 'pixels', direct width, height, etc, but rather allow the bootstrap framework "Grid" system and widgets to manage
         resizing and laying themselves out.  This makes it flexible to support other devices such as mobile.  Also it is best practice
         to keep the 'layout' logic in these UI Binder files rather than in the widget java class.  The widget java class should drive the 
         logic for the widget (but not the layout). It is also best practice to not mix old gwt widgets and bootstrap widgets together as the older widgets don't necessarily handle
         resizing, etc well in the bootstrap framework.
    -->
    
   <b:Container fluid="true" addStyleNames='{style.mainContainer}'>

        <!-- $TODO$ This will be a placeholder to show the entry point of how a tool could be launched -->
        <!--
        <b:Well size="LARGE" addStyleNames="subHeader">
            <b:Row>
                <b:Column size="MD_2">
                    <b:Heading size="H4" text="My Tools"/>
                </b:Column>
                <b:Column size="MD_2">
                    <b:Button type="LINK" icon="FILE_TEXT_O" iconSize="TIMES3" text="Course Authoring" ui:field="startGat"/>
                </b:Column>
                <b:Column size="MD_2">
                    <b:Button type="LINK" icon="LIST" iconSize="TIMES3" text="Survey Authoring"/>
                </b:Column>
            </b:Row>
        </b:Well>
        -->
        
        <b:Container fluid="true" addStyleNames="{style.mainContainer} {style.welcomeBackground}" width="100%" height="100%" ui:field="ctrlLoadPanel" >
        	<g:VerticalPanel width='100%' height='100%' horizontalAlignment='ALIGN_CENTER' verticalAlignment='ALIGN_MIDDLE'>
	        	<g:FlowPanel>
					<g:HTML addStyleNames="{style.welcomeTextHeader}">
						Welcome to the Course Creator!
					</g:HTML>
					<g:HTML addStyleNames="{style.welcomeTextSub}">
						Please wait while the editor loads...
					</g:HTML>
	                <w:BsLoadingIcon type="SPINNER" size="TIMES5" ui:field="ctrlLoadIcon"/>
	            </g:FlowPanel>
	   		</g:VerticalPanel>
        </b:Container>
        
        <b:Container fluid="true" ui:field="ctrlContents" addStyleNames="subHeaderContents {style.mainContainer}">
            <b.html:Paragraph ui:field="iFrameCtrl" alignment="CENTER" addStyleNames='{style.toolContainer}'>
            	<g:DeckPanel ui:field='toolContainerDeck'>
            	
	            	<g:SimplePanel width='100%' ui:field="frameContainer">
	                	<!-- The IFrame container's contents are filled dyanamically by the code -->
	                </g:SimplePanel>
	                
                </g:DeckPanel>
            </b.html:Paragraph>
        </b:Container>
    </b:Container>
</ui:UiBinder> 