<!DOCTYPE ui:UiBinder SYSTEM "http://dl.google.com/gwt/DTD/xhtml.ent">
<ui:UiBinder xmlns:ui="urn:ui:com.google.gwt.uibinder"
	xmlns:g="urn:import:com.google.gwt.user.client.ui"
	xmlns:b="urn:import:org.gwtbootstrap3.client.ui"
	xmlns:cw="urn:import:mil.arl.gift.common.gwt.client.widgets"
	xmlns:gma="urn:import:mil.arl.gift.tools.dashboard.client.bootstrap.gamemaster.aar">
	<ui:style type="mil.arl.gift.tools.dashboard.client.bootstrap.gamemaster.aar.SessionTimeline.Style">
	   .sessionTimeline{
	       display:flex;
	       flex-direction: column;
	       background-color: white;
	   }
	   .intervalPatch{
	        stroke-width: 3px;
	   }
	   .intervalAtExpectation{
	        /* green */
            fill: #0d0;
            stroke: #050;
	   }
	   .intervalAboveExpectation{
	        /* dark green */
            fill: #129e12;
            stroke: black;
	   }
	   .intervalAboveExpectation > rect{
            stroke-dasharray: 10 5;
       }
	   .intervalAboveExpectation > text{
            fill: yellow;
            stroke: none !important;
            filter: drop-shadow(1px 1px 1px black);
            font-size: 20px;
            pointer-events: none;
	   }
	   .intervalBelowExpectation{
	        /* red */
            fill: #f00;
            stroke: #700;
	   }
	   .intervalUnknown{
	        /* gray */
            fill: #cdcdcd;
            stroke: #888;
            stroke-dasharray: 2;
       }
	   .intervalBookmark > rect{
	        fill: transparent;
            stroke: transparent;
            width: 0px !important;
            height: 0px;
	   }
	   .intervalBookmark > text{
            fill: #66f;
            stroke: #33c;
	   }
	   .intervalStrategy > rect{
            fill: transparent;
            stroke: transparent;
            width: 0px !important;
            height: 0px;
       }
       .intervalStrategy > text{
            fill: #56a;
       }
	   .intervalObserverEval > rect{
            fill: transparent;
            stroke: transparent;
            width: 0px !important;
            height: 0px;
       }
	   .intervalObserverEval > text{
            fill: #ff6;
            stroke: black;
            font-size: 1.3em;
            transform: translate(4px, 0px);
       }
	   @external x, axis, tick, tickArea, event, interval, selected;
	   .chart{
	   }
		.chart .x.axis .tick text{
            pointer-events: none;
            font-size: 11px;
            font-weight: bold;
            user-select: none;
        }
        .chart .x.axis .tick line{
            stroke: black;
        }
        .chart .event > text{
            stroke-linejoin: round;
            paint-order: stroke;
            fill: black;
            font-weight: bold;
            user-select: none;
        }
        .chart .event > text.eventText{
            pointer-events: none;
        }
        .chart .event.selected .tickArea{
            fill: rgb(230,230,255) !important;
        }
        /* Ensure that intervals with widths less than 1 pixel are still visible */
        .chart .interval > rect[width\^="0"]{
		    width: 6px;
		    x: -3px;
		}
        .chart .interval:hover{
            stroke: #66f;
            stroke-width: 3px;
            stroke-dasharray: 0;
        }
        .chart .interval:hover > text{
            stroke: #66f;
        }
	    .chart .event.taskEvent .tickArea{
            stroke: #bbc;
            fill: #ffffff;
	    }
	    .chart .event.conceptEvent:nth-child\(odd\) .tickArea{
	        fill: #fafaff;
	    }
	    .chart .event.conceptEvent:nth-child\(even\) .tickArea{
            fill: #f2f2ff;
        }
	</ui:style>
	<g:FlowPanel addStyleNames="{style.sessionTimeline}">
	   <gma:TimelineChart width='100%' height='100%' addStyleNames='{style.chart}' ui:field="timelineChart"/>
	</g:FlowPanel>
</ui:UiBinder> 