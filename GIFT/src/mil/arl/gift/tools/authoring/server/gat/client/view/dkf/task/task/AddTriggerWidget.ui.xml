<!DOCTYPE ui:UiBinder SYSTEM "http://dl.google.com/gwt/DTD/xhtml.ent">
<ui:UiBinder xmlns:ui="urn:ui:com.google.gwt.uibinder"
	xmlns:g="urn:import:com.google.gwt.user.client.ui"
	xmlns:task="urn:import:mil.arl.gift.tools.authoring.server.gat.client.view.dkf.task.task"
	xmlns:t="urn:import:mil.arl.gift.tools.authoring.server.gat.client.view.dkf.task"
	xmlns:u="urn:import:mil.arl.gift.tools.authoring.server.gat.client.view.util"
	xmlns:c="urn:import:mil.arl.gift.common.gwt.client.widgets.bootstrap"
	xmlns:select="urn:import:org.gwtbootstrap3.extras.select.client.ui"
	xmlns:util="urn:import:mil.arl.gift.tools.authoring.server.gat.client.view.util.list"
	xmlns:shared="urn:import:mil.arl.gift.tools.authoring.server.gat.client.view.dkf.shared">
	<ui:style>
		.smallPadBottom{
			margin-bottom: 5px;
		}
		.largePadBottom{
			margin-bottom: 20px;
		}
		.tabbed{
			padding: 0px 30px;
		}
		.padBottom{
			margin-bottom: 10px;
		}
		.smallPadTop{
			margin-top: 5px;
		}
		.padTop{
			margin-top: 20px;
		}
		.largePadTop{
			padding-top: 10px;
		}
		.warningLabel{
			color: black;
			background-color: yellow;
			background: linear-gradient(to right, rgb(255, 255, 150), rgb(255, 255, 50));
			border-width: 2px;
			border-style: solid;
			border-color: rgb(255,200,100);
			padding: 3px 5px;
			border-radius: 10px;	
			margin-top: 5px;
		}
		.delayTextBox{
			margin: 0px 5px;
			text-align: right;
		}
		.inline{
			display: inline;
		}
		.triggerList{
            vertical-align: middle;
            display: inline-block;
            width: auto;
	    }
	    .nameBox{
            display: inline-block;
            width: 400px;
            margin-right: 10px;
	   }
	</ui:style>
	<g:HTMLPanel>
    
        <!-- Panel for selecting the type of trigger -->
		<g:FlowPanel addStyleNames='{style.smallPadBottom}'>
			<g:HTML ui:field='ruleLabel' addStyleNames='{style.inline}'> 
				This trigger should be fired when...
			</g:HTML>
			<g:ListBox addStyleNames='form-control {style.triggerList}' ui:field='triggerCondition'>
			</g:ListBox>
		</g:FlowPanel>

		<g:Label visible='false' addStyleNames='{style.warningLabel}' ui:field='warningLabel' />
		
        <!-- Panel that contains the controls for editing the trigger parameters -->
		<g:FlowPanel addStyleNames='{style.tabbed} {style.padBottom}'>	
	      	
	      	<g:DeckPanel ui:field="deckPanel" addStyleNames='{style.padBottom}'>
	      	
	      		<g:FlowPanel ui:field="scenarioStartsEditor"/>
	      		
	      		<t:PerfNodeSelectorImpl addStyleNames='{style.smallPadTop}' ui:field='conceptAssessmentEditor'/>
	      		
	      		<t:PerfNodeSelectorImpl addStyleNames='{style.smallPadTop}' resultVisibility='false' ui:field='conceptEndedEditor'/>
	      		
	      		<t:PerfNodeSelectorImpl addStyleNames='{style.smallPadTop}' resultVisibility='false' ui:field='taskEndedEditor'/>
	      		
	      		<task:EntityTaskTriggerEditor addStyleNames='{style.smallPadTop}' ui:field="entityLocationEditor"/>
                
                <shared:LearnerActionPicker ui:field="learnerActionEditor" />
                
                <g:FlowPanel ui:field="strategyAppliedEditor">
					<g:HTMLPanel>
					Strategy name: 
					<g:FlowPanel ui:field='strategyNameContainer'>
					   <select:Select addStyleNames="{style.nameBox}" ui:field='strategyNameBox'/>
				    </g:FlowPanel>
					</g:HTMLPanel>
				</g:FlowPanel>
	      		
	      	</g:DeckPanel>
	      	
	    </g:FlowPanel>  
	    
        <!-- Panel that contains controls for adding and adjusting the delay -->
		<g:FlowPanel addStyleNames='{style.padTop}'>
        
            <!-- Check box that displays that enables the delay controls -->
		   	<g:CheckBox ui:field='delayCheckBox'/>
		   	
		   	<g:FocusPanel addStyleNames='{style.inline}' ui:field='delayPanel'>
			   	<g:FlowPanel addStyleNames='{style.inline}'>
					<g:InlineHTML ui:field='delayLabel'> 
						Wait an additional
					</g:InlineHTML>

					<g:TextBox width='75px' addStyleNames='{style.delayTextBox}' ui:field='delayBox'/>

					<g:InlineHTML ui:field='delayLabel2'> 
						second(s) before starting this task.
					</g:InlineHTML>
				</g:FlowPanel>
			</g:FocusPanel>
		</g:FlowPanel>
		
        <!-- Panel that contains controls for adding and adjusting feedback -->
		<g:FlowPanel addStyleNames='{style.largePadTop}'>

            <!-- Check box that displays that enables the feedback controls -->
		    <g:CheckBox ui:field='feedbackCheckBox' addStyleNames="{style.inline}" />
            
		    <g:InlineHTML ui:field='feedbackCheckLabel'>
                Present activities when the task is started
            </g:InlineHTML>

            <g:FocusPanel addStyleNames='{style.inline} {style.largePadTop}' ui:field='feedbackPanel'>
		   	 	<util:ItemListEditor ui:field="strategyActivitiesList" />
		   	</g:FocusPanel>
		   	
		</g:FlowPanel>		
	    
	</g:HTMLPanel>
</ui:UiBinder> 