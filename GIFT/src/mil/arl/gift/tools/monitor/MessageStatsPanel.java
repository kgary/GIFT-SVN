/**
 * Copyright Dignitas Technologies, LLC
 * 
 * This file and its contents are governed by one or more distribution and
 * copyright statements as described in the LICENSE.txt file distributed with
 * this work.
 */
package mil.arl.gift.tools.monitor;

import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 * Displays the statistics of messages being sent
 *
 * @author jleonard
 */
public class MessageStatsPanel extends javax.swing.JPanel implements MessageStatsModel.MessageStatisticsUpdateListener {

    private static final long serialVersionUID = 1L;
    
    private final DefaultTableModel messageStatsTableModel =
            new javax.swing.table.DefaultTableModel(
            new Object[][]{},
            new String[]{
                "Message Type", "Count", "Total Size", "Average Size"
            }) {
                private static final long serialVersionUID = 1L;

                Class<?>[] types = new Class<?>[]{
                    java.lang.String.class, java.lang.Integer.class, java.lang.Long.class, java.lang.Double.class
                };

                boolean[] canEdit = new boolean[]{
                    false, false, false, false
                };

                @Override
                public Class<?> getColumnClass(int columnIndex) {
                    return types[columnIndex];
                }

                @Override
                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit[columnIndex];
                }
            };

    @Override
    public void onMessageStatisticsUpdate(List<MessageStatsModel.MessageStatistics> messageStatistics) {
        DefaultTableModel tableModel = (DefaultTableModel) messageStatsTable.getModel();
        tableModel.getDataVector().clear();
        for (MessageStatsModel.MessageStatistics messageStatistic : messageStatistics) {
            Object[] dataArray = new Object[4];
            dataArray[0] = messageStatistic.getMessageType().getDisplayName();
            dataArray[1] = messageStatistic.getMessageCount();
            dataArray[2] = 0;
            dataArray[3] = 0;
            tableModel.addRow(dataArray);
        }
        messageStatsTable.repaint();
    }

    /** Creates new form MessageStatsPanel */
    public MessageStatsPanel() {
        initComponents();
    }

    /** This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        messageStatsTable = new javax.swing.JTable();

        messageStatsTable.setModel(messageStatsTableModel);
        jScrollPane1.setViewportView(messageStatsTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );
        
        jScrollPane1.setToolTipText("Provides a list of statistics for each message type received by this monitor.");
        
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable messageStatsTable;
    // End of variables declaration//GEN-END:variables
}
