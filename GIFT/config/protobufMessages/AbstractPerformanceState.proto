/* 
 * version 1.0 [June 2021]
 * For use with GIFT
 * Dignitas Technologies, LLC.
 */

syntax = "proto3";

option java_package = "generated.proto.common";
option java_outer_classname = "AbstractPerformanceStateProto";

import "google/protobuf/wrappers.proto";
import "AbstractPerformanceStateAttribute.proto";

/* This message is the base message for the learner state performance state attribute. */
message AbstractPerformanceState {
	oneof type {
		/* Task performance state. */
		TaskPerformanceState task_performance_state = 1;
		
		/*  Concept performance state. */ 
		ConceptPerformanceState concept_performance_state = 2;
		
		/* Intermediate concept performance state. */
		IntermediateConceptPerformanceState intermediate_concept_performance_state = 3;	
	}
}

/* This message contains the learner state performance state measurements for a task. */
message TaskPerformanceState {
	/* The list of concept performance states, representing either a concept performance state or 
	   intermediate concept performance state. */
	repeated ConceptPerformanceStateChoice concept_performance_state_choices = 1;
	
	/* The performance state of the performance node. */
	AbstractPerformanceStateAttribute state = 3;
	
	/* Value indicating if the performance state is for a node that requires manual observation. */
	google.protobuf.BoolValue has_observed_assessment = 4;
	
	/* optional - difficulty value for this task, normally calculated by the domain module during a DKF */
	google.protobuf.DoubleValue difficulty = 5;

	/* optional - the reason for the difficulty value for this task, can be auto generated by the domain module during a DKF */
	google.protobuf.StringValue difficultyReason = 6;

	/* optional - stress value for this task, normally calculated by the domain module during a DKF */
	google.protobuf.DoubleValue stress = 7;

	/* optional - the reason for the stress value for this task, can be auto generated by the domain module during a DKF */
	google.protobuf.StringValue stressReason = 8;
}

/* This message contains the learner state performance state measurements of a concept. */
message ConceptPerformanceState {
	/* The performance state of the node. */
	AbstractPerformanceStateAttribute state = 1;
	
	/* The value indicating if the given node has an observed assessment. */
	google.protobuf.BoolValue has_observed_assessment = 2;
}

message IntermediateConceptPerformanceState {
	/* The list of concept performance states, representing either a concept performance state or 
	   intermediate concept performance state. */
	repeated ConceptPerformanceStateChoice concept_performance_state_choices = 1;
	
	/* The performance state of the node. */
	AbstractPerformanceStateAttribute state = 2;
	
	/* The value indicating if the given node has an observed assessment. */
	google.protobuf.BoolValue has_observed_assessment = 3;
}

message ConceptPerformanceStateChoice {
	oneof type {
		/* Concept performance state. */
		ConceptPerformanceState concept_performance_state = 1;
		
		/* Intermediate concept performance state. */
		IntermediateConceptPerformanceState intermediate_concept_performance_state = 2;
	}
}

