syntax = "proto3";
option csharp_namespace = "Cta.Tmt.Protobuf";
option java_package = "cta.tmt.protobuf";



message Entity {
	
  // generated by TSS, changes between runs
  int32 engineID = 1; 
  
  // shared id between TMT and TSS, does not change between runs
  int32 simID = 2; 
  
  // nice display name for SME's (unique) cap this length (10 characters?)
  string name = 3; 
}

message Quaternion {
  float x = 1;
  float y = 2;
  float z = 3;
  float w = 4; 
}


message Vector3 {
  float x = 1; 
  float y = 2;	
  float z = 3;
}

message Health {
  int32 current = 1;
  int32 max = 2; 
}


message EntityTransform{
  Entity entity = 1;
  Vector3 position = 2;
  Vector3 rotation = 3;
}

message EntityDisRepresentation {
	int32 kind = 1;
	int32 domain = 2;
	int32 country = 3;
	int32 category = 4;
	int32 subcategory = 5;
	int32 specific = 6;
	int32 extra = 7;
}

message CoordinateSystem {
	GlobalCoordinateSystem gcs = 1;
	AngleType angleType = 2;
	OrientationType orientationType = 3;
	RotationSequence rotSeq = 4;
	DistanceUnit distanceUnit = 5;
}

enum WeatherType
{
	Clear = 0; 
	Fog = 1; 
	Overcast = 2; 
	Rain = 3; 
}

enum SimulationStateType {
  Begin = 0;
  End = 1; 
  Pause = 2; 
  Resume = 3; 
}

enum GlobalCoordinateSystem {
	
	// East, North, Up (left handed, z up)
	ENU = 0;
	
	// Earth Centered, Earth-fixed
	ECEF = 1;
	
	// lat, lon, h
	WGS84_Geodetic = 2;
	
	// Unity
	Left_Handed_Y_Up = 3;
}

// the mathematical representation of the orientation of an entity
enum OrientationType {
	
	// euler angles
	Euler = 0;
	
	// axis angles
	Axis = 1;
	
	// earth-centered earth-fixed
	ECEF_Orientation = 2;
	
	// roll pitch yaw
	RPY = 3; 
}

enum AngleType {
	Radians = 0;
	Degrees = 1;
}

// The order in which a quaternion was rotated in order to get euler angles
enum RotationSequence { 
	ZYX = 0;
	ZYZ = 1;
	ZXY = 2;
	ZXZ = 3;
	YXZ = 4;
	YXY = 5;
	YZX = 6;
	YZY = 7;
	XYZ = 8;
	XYX = 9;
	XZY = 10;
	XZX = 11; 
	Custom = 12;
}

enum DistanceUnit {
	Centimeters = 0;
	Meters = 1;
	Kilometers = 2;
	Inches = 3;
	Feet = 4;
	Yard = 5;
	Miles = 6;
}

enum EntityType {
	Agent = 0;
	AreaOfInterest = 1;
	Waypoint = 2;
	Weapon = 3;
	Vehicle = 4;
}

enum Fidelity {
	Low = 0;
	Medium = 1;
	High = 2;
}	

enum WeaponType {
	M4 = 0;
	AK47 = 1;
	AK74 = 2;

	// machine gun
	M249 = 3;

	Grenade_Launcher = 4;
}

enum ForceType {
	None = 0;
	Blufor = 1;
	Opfor = 2;
	Civilian = 3;
}

enum CommunicationType {
	Text = 0;
	Audio = 1;
}

enum ReceiverType {
	All_Trainees = 0;
	Specific_Trainee = 1;
}

enum ScreenFilterType {
	NoFilter = 0;
	Night_Vision = 1;
	Infrared = 2;
}

message Response {
	int32 error = 1;
	string message = 2;
}