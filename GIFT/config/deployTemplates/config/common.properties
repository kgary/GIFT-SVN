#
# This file contains common module properties.  If a module's specific properties file
# provides a value for a common property, it will be used instead of what is provided here.
#
# Format: "<property name>=<value>"
# 
# Comments: start line with "#" character
#

# Root directory of where course folders are stored
# Note: file path only supports forward slash and double backslash
DomainDirectory=../Domain/

# Root directory of where to place GIFT exports
ExportDirectory=../Domain/Exports/

# Root directory of where to place GIFT exports
ImportDirectory=../Domain/Imports/

# Root directory of where to place uploaded files
UploadDirectory=../Domain/temp/

# Root directory of where to place course folders used for experiments
ExperimentDirectory=../Domain/Experiments/

# Root directory of where training applications are stored
TrainingAppsDirectory=../Training.Apps/

# Various module configuration directories where configuration files are saved/loaded from
SensorConfigDirectory=config/sensor/configurations/
LearnerConfigDirectory=config/learner/configurations/
PedagogicalConfigDirectory=config/ped/configurations/
GatewayConfigDirectory=config/gateway/


# Directory to save / load database backups from
# If this is not set then database backup and restore operations will be disabled
Database_Backups_Path=data/umsDbBackups

# The URL presented to provide users with more information about GIFT
GIFTWebsite=https://gifttutoring.org

# The mode the tutor should use.
# Different modes will alter certain logic such as the login webpage shown to the user.
# Possible values: 
# Simple  - uses a simple sign-on page with no authentication, doesn't use the GIFT dashboard
# Desktop - uses the GIFT Dashboard, runs a local Gateway module (i.e. doesn't use Java Web Start)
# Server  - uses the GIFT Dashboard, uses Java Web Start to deliver the Gateway module to the client, requires content management system (e.g. Nuxeo)
DeploymentMode=@giftDeployMode@

# Whether or not to use the default browser [according to the operating system] instead
# of Internet Explorer (the GIFT standard) to launch GIFT webpages (e.g. Dashboard, TUI, GAT)
# A default value of 'false' forces Internet Explorer to be used.  This is recommended.
UseDefaultBrowser=false

# Whether LMS records found for a user should be applied to the courses the user can run when a course list is requested.  
# This means having GIFT label courses as recommended or refresher based on internal algorithms.
# Default: true
ApplyLMSRecordsAtCourseListRequest=true

# The Tutor web server URL that hosts the Tutor User Interface (TUI) webpage
TutorURL=@giftTutorUrl@

# The Tutor web socket url.
# This should point to the servlet on the Tutor web server that should be used to establish web socket connections for clients.
TutorWebSocketUrl=tuiws

# The port on which the GIFT Admin Server is hosting web pages
GiftAdminServerUrl=@giftAdminServerUrl@

# the URL of the service providing military symbols (e.g. 2525C)
# currently used by the game master tool
MilitarySymbolServiceURL=@giftAdminServerUrl@/mil-sym-service

# The port to host the domain content server on
# If this is not defined then the domain content server will not be started
# [Required] 
DomainContentServerPort=8885

# The host name to use for the domain content server
# If this is not defined the domain module's IP address will be used instead.  If you use the IP address you must
# consider whether the TUI user will have access to it (i.e. firewalls, proxies, etc.)
# Note: do not include the http:// or https:// prefix, this will be done for you based on the 'UseHttps' property
DomainContentServerHost=@giftHost@

# The subpath of the dashboard memory file servlet. This should match the sub path that is in the servlet mapping of the web.xml file for the dashboard.
DashboardMemoryFileServletSubPath=cm

# The relative path on the GIFT Admin Server to get the Event Report Tool
# e.g. www.giftadminserver.com/eventreporttool, the property should set to 'eventreporttool'
EventReportToolPath=dashboard/EventReportTool.html

# The relative path on the GIFT Admin Server to get the GIFT Authoring Tool
# e.g. www.giftadminserver.com/authoringtool, the property should set to 'authoringtool'
AuthoringToolPath=dashboard/GiftAuthoringTool.html

# The URL of the system that authoritative resources (e.g. frameworks, competencies) 
# should be pulled from. If this is not defined, then authors will not be able to import 
# authoritative resources in the GIFT Authoring Tool.
AuthoritativeSystemUrl=

# The relative path on the GIFT Admin Server to get the Dashboard
# e.g. www.giftadminserver.com/dashboard, the property should set to 'dashboard'
DashboardPath=dashboard

# The URL for the AutoTutor script authoring tool
# If no value is provided, the launch button will be disabled.
ASAT_URL=http://asat.gifttutoring.org/?helpOn=1

# The URL for the AutoTutor ACE engine (responsible for handling AutoTutor script execution)
# If no value is provided or the URL can't be reached, AutoTutor courses will not run on this GIFT instance
AutoTutor_ACE_URL=https://cs.gifttutoring.org/ACEAPI2017/api/aceaction

# The URL for TRADEM 
# If no value is provided, the launch button will be disabled.
TRADEM_URL=http://tradem.gifttutoring.org

# The Content Management System URL used to interact with various services
# it offers (e.g. create user, get file)
# 
# Nuxeo API Playground: 
# 	Website - http://nuxeo.github.io/api-playground
# 	CMS URL - http://demo.nuxeo.com/nuxeo/
CMS_URL=@giftCmsUrl@

# Key used to authenticate with the CMS
CMS_SECRET_KEY=@giftCmsSecretKey@

# CMS User workspace quota size in bytes
CMS_USER_WORKSPACE_QUOTA=@giftCmsUserWorkspaceQuota@

# CMS User with privileges to perform admin operations
CMS_ADMIN_USER=@giftCmsAdminUser@

# Indicates if connections should be switched to use https:// rather than http://
# Default: false
UseHttps=@giftUseHttps@

# Indicates if port forwarding is being used on the server where GIFT is deployed.   This means that GIFT may not need to construct urls with ports in certain cases.
# One example is the DomainContentHost url, when portforwarding is enabled, GIFT doesn't use the port, since the server redirects the url to the proper port.
UsePortForwarding=@giftUsePortForwarding@

# Indicates the timeout (in milliseconds) for when an 'ack' should be considered timed out.
# Default: 10000 milliseconds (10 seconds)
MessageAckTimeoutMs=10000

# The timeout value (in milliseconds) for the module status monitor.
# If a module status is not retrieved within this time period, then the module
# will be timed out and removed. 
# Default: 10000 milliseconds (10 seconds)
ModuleStatusMonitorTimeoutMs=10000

# Flag to enable server metrics tracking.  The metrics server allows for profiling of various
# GIFT server side metrics such as rpc timings, hit rates in realtime.   The benefit is to enable
# system health metrics when GIFT is running and expose that data to external monitoring services.
# Primarily this will be used when GIFT is running in a cloud/server environment.  If GIFT is running
# in desktop or experiment mode, likely this will not need to be enabled.
# Default: false
EnableServerMetrics=@useMetricsServer@

# The url to the metrics server.  This is only used if the EnableServerMetrics flag is set to true.  The
# url should be the full path to the metrics servlet.  This url is only accessed internally to GIFT so only
# an internal IP address is required.  
# Default: <empty string>
MetricsURL=http://localhost:8080/dashboard/dashboard/metrics/

# Flag to control whether to allow stress/load testing.  If this flag is set to ON, then gift can be configured to be in load testing mode.
# This should NEVER be enabled in a production environment and should only be used during development / load testing.
# Default: false  
EnableStressMode=false

# Used to create a unique token that is required for stress accounts.  This is only used if StressLogin is enabled.  
# This should NEVER be enabled in a production environment and should only be used during development / load testing.
# StressToken=Default

# The password of the ciphored user password. Every user password is encrypted between the dashboard and the tutor.
# This value will is needed to encrypt and decrypt the users password that is sent over remote procedure calls.
CiphorPassword=@giftCiphorPassword@

# The URL to where JMX is configured for activmq.  JMX must be enabled for activemq and is configured in the
# wrapper.conf file for activemq. The port must match what activemq is using in the wrapper.conf file. 
# This jmx url is used to clean up topics & queues that are created by GIFT. Most likely this value should not need
# to change unless you are configuring your own cloud/server instance of GIFT.
JmxURL=localhost:7020

# Used to bypass the permission checks for surveys. This value will only be used when running in desktop mode.
# Setting this to true and running in desktop mode will allow user to edit public course surveys. If not in desktop
# mode, this value will be ignored and the normal permission checks will still take place. Default value is true.
BypassSurveyPermissionCheck=false

# The TrustedLtiConsumers property is a JSON object that contains a mapping of trusted lti consumers that are allowed by
# GIFT (running as an LTI provider).  The Json format is used below and could be all on a single line, but for readability
# is split into multiple lines using the '\' character at the end of each line.  New consumers can be added by following
# the JSON format.  A description of each field for a consumer is provided here:
#   name - The name of the consumer (used to identify the consumer).  This name must be unique for each consumer in the list.
#   consumerKey - The consumer key that must be unique for each consumer in the list.  Typically this is a UUID that is 
#                 generated for the consumer by the Tool Provider.
#   consumerSharedSecret - The shared secret which should be unique for each consumer and different than the consumer key.  This also
#                 typically is a UUID that is generated.  The shared secret is used to validate the incoming LTI launch 
#                 request for a specific consumer.
# The LTI specification recommends that different keys are used for different environments such as development or production environments.
# Additionally it is recommended that the production values are not committed into the normal SVN configuration, but kept specific to the production
# deploy of GIFT.
TrustedLtiConsumers={ \
  "trusted_consumers": [ \
           { "name" : "EdX", "consumerKey":"@giftEdXConsumerKey@", "consumerSharedSecret":"@giftEdXConsumerSecret@"} \
      ] \
} 

# The TrustedLtiProviders property is a JSON object that contains a mapping of trusted lti providers that are allowed by
# GIFT (running as an LTI consumer).  The Json format is used below and could be all on a single line, but for readability
# is split into multiple lines using the '\' character at the end of each line.  New providers can be added by following
# the JSON format.  A description of each field for a consumer is provided here:
#   name - The name of the provider (used to identify the provider).  This name must be unique for each provider in the list.
#   providerKey - The provider key that must be unique for each provider in the list.  This is usually provided by the provider.
#   providerSharedSecret - The shared secret which should be unique for each provider and different than the provider key.  This also
#                 provided by the provider.  The shared secret is used by the provider to validate the incoming request.
# The LTI specification recommends that different keys are used for different environments such as development or production environments.
# Additionally it is recommended that the production values are not committed into the normal SVN configuration, but kept specific to the production
# deploy of GIFT.
# ex: { "name" : "EdX_Test3", "providerKey":"64401627-f6c3-4f53-94a8-c5fc01edaf35", "providerSharedSecret":"8daee3b3-9dbb-4bdf-92eb-c65258382b63"} \
TrustedLtiProviders={ \
  "trusted_providers": [ \
      ] \
}

# Specifies the timeout (in milliseconds) of when an lti launch is considered 'stale' from the time the initial launch
# request is received from the server to the time the gift dashboard is connected to. This is an lti security 
# measure to prevent stale launch requests from accessing the gift course.
# Allow 10 seconds from the initial lti launch request from the lti servlet to the connection to the gift dashboard.
LtiTimeoutDashboardMs=10000

# Specifies the timeout (in milliseconds) of when an lti launch is considered 'stale' from the time the initial launch
# request is received from the server to the time the lti course is requested to be started. This is an lti security 
# measure to prevent stale launch requests from accessing the gift course.
# Allow 60 minutes from the initial lti launch request from the lti servlet to tutor to start the course.  
LtiTimeoutTutorMs=3600000

# Specifies the lti sub path where the lti servlet is hosted.
# This must match the <servlet-mapping> in the web.xml for where the servlet lives.
# For example, the full url to the lti servlet may look like this:  http://localhost:8080/dashboard/lti
# where /lti is the subpath pointing to the lti servlet.
LtiUrlSubPath=lti

# Specifies the lti sub path where the lti consumer servlet is hosted.
# This must match the <servlet-mapping> in the web.xml for where the servlet lives.
# For example, the full url to the lti servlet may look like this:  http://localhost:8080/dashboard/lticonsumer
# where /lticonsumer is the subpath pointing to the lti consumer servlet.
LtiConsumerUrlSubPath=lticonsumer

# The title to display for the GIFT Dashboard window (most likely the label of a tab in the browser)
# If not specified the GIFT Version name is used (e.g. '2015-1') from version.txt with the 'GIFT' prefix (e.g. 'GIFT 2015-1')
WindowTitle=@giftWindowTitle@

#flag to control whether of not client side analytics are used within GIFT
EnableClientAnalytics=false
#Ip of server hosting the analytics data
ClientAnalyticsUrl=http://127.0.0.1/

# The path to the tutor module file servlet hosted character to use as the
# default character if a custom character is not authored for some action during a course.
DefaultCharacter=avatarResources/VirtualHuman/DefaultAvatar.html

# The API key that should be used to interact with Google Maps's hosted services
# If not specified, any maps rendered using Google Maps in GIFT will be shown in a developer-only mode with reduced functionality
GoogleMapsApiKey=@giftGoogleMapsApiKey@

# Specifies the delay (in milliseconds) between when an assessment notification is fired and when it can be fired again. This is
# a specific property geared towards Game Master (and also used by ARES) to limit the number of back-to-back notifications for 
# the OC.  Any notifications that happen during the delay will be ignored; for example, if a learner state toggles between 
# At/Above and Below Expectation a few times in rapid succession, only the first Below Expectation will trigger a notification 
# and the next few changes within the delay will not fire a notification.
AssessmentNotificationDelayMs=5000

# This is an internal user id that should be used for readonly access. It must be all lowercase and must be a unique id
# that will not collide with an actual nuxeo user. This user should only have read only access and does not need a workspace.
ReadOnlyUser=_giftreadonlyuser_

# Used to determine how the system will be managed, either by learners using the Tutor web page (TUI)
# or through the Gateway module's connection to the Adaptive Learning Service bus.
# Possible values: 
# Course - uses the Tutor module to present a course within a browser.  This is the default/standard way GIFT is normally used.
# RTA - ('real-time assessment') the tutor module is not used, there is learner UI presented by this application, the dashboard
#        can't be used to start courses, the system is managed through the Adaptive learning service bus and the Gateway module's
#        connection to that message bus.
LessonLevel=Course