<?xml version="1.0" encoding="UTF-8"?>
<xs:schema elementFormDefault="qualified" version="4.1" xmlns:common="http://GIFT.com/common" xmlns:fg="http://www.FGolubov.com/XMLEditor" xmlns:ped="http://GIFT.com/pedagogicalStrategy" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:import namespace="http://GIFT.com/common" schemaLocation="../common.xsd"/>
    <xs:import namespace="http://GIFT.com/pedagogicalStrategy" schemaLocation="../ped/pedagogicalStrategy.xsd"/>
    <xs:include schemaLocation="../lessonMaterial/lessonMaterial.xsd"/>
    <!--  <xs:include schemaLocation="./steps.xsd"/> -->
    <xs:element name="Course">
        <xs:annotation>
            <xs:appinfo>
                <fg:node-info message="Course">
                    <fg:message>This is the root node of a Course.  Look for other helpful information by clicking on a node.</fg:message>
                    <fg:message>Refer to "Help" for more information.</fg:message>
                </fg:node-info>
            </xs:appinfo>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element minOccurs="0" name="description" type="xs:string"/>
                <xs:element minOccurs="0" name="exclude" type="common:booleanEnum">
                    <xs:annotation>
                        <xs:appinfo>
                            <fg:node-info message="Exclude Option">
                                <fg:message>Whether or not to exclude this course from the list of courses available to the user.</fg:message>
                            </fg:node-info>
                        </xs:appinfo>
                    </xs:annotation>
                </xs:element>
                <xs:element minOccurs="0" ref="common:surveyContext"/>
                <!-- Future work
				<xs:element ref="actions" minOccurs="0"/>
				-->
				<xs:element minOccurs="0" ref="concepts"/>
                <xs:element ref="transitions"/>
                <!--  <xs:element  ref="AuthoringPath"/> -->
            </xs:sequence>
            <xs:attribute name="name" use="required">
                <xs:annotation>
                    <xs:appinfo>
                        <fg:node-info message="Course Name">
                            <fg:message>The course name will appear on the Tutor in the list of courses.</fg:message>
                        </fg:node-info>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="version" use="optional">
                <xs:annotation>
                    <xs:appinfo>
                        <fg:node-info message="File Version">
                            <fg:message>The version of this file.  This is auto-incremented if using the CAT to save.</fg:message>
                        </fg:node-info>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
	<xs:element name="concepts">
		<xs:annotation>
			<xs:appinfo>
				<fg:node-info message="Concepts">
					<fg:message>Specifies the knowledge, skills, and abilities taught by this course</fg:message>
				</fg:node-info>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence maxOccurs="unbounded">
				<xs:element name="concept">
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:minLength value="1"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
    <xs:element name="transitions">
        <xs:annotation>
            <xs:appinfo>
                <fg:node-info message="Transitions">
                    <fg:message>Specifies the flow of the lesson by providing an ordered list of transitions that will be presented at various points during a domain session for this scenario.</fg:message>
                    <fg:message>Refer to "Help" for more information.</fg:message>
                </fg:node-info>
            </xs:appinfo>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:choice maxOccurs="unbounded">
                    <xs:element ref="AAR"/>
                    <xs:element ref="Guidance"/>
                    <xs:element ref="LessonMaterial"/>
                    <xs:element ref="MerrillsBranchPoint"/>
                    <xs:element ref="PresentSurvey"/>
                    <xs:element ref="TrainingApplication"/>
                </xs:choice>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="transitionName">
        <xs:annotation>
            <xs:appinfo>
                <fg:node-info exposed="true" message="Transition Name">
                    <fg:message>A display name for this transition.</fg:message>
                </fg:node-info>
            </xs:appinfo>
        </xs:annotation>
        <xs:simpleType>
            <xs:restriction base="xs:string">
                <xs:minLength value="1"/>
            </xs:restriction>
        </xs:simpleType>
    </xs:element>
    <xs:element name="MerrillsBranchPoint">
        <xs:annotation>
            <xs:appinfo>
                <fg:node-info message="Merrills Branch Point">
                    <fg:message>Specifies a branch point in course flow using a semi-fixed flow of lesson content based on Merrills 4 quadrants: Rule, Example, Recall, Practice.</fg:message>
                </fg:node-info>
            </xs:appinfo>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element minOccurs="0" ref="transitionName"/>
                <xs:element name="Quadrants">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element ref="Rule"/>
                            <xs:element minOccurs="0" ref="transitions"/>
                            <xs:element ref="Example"/>
                            <xs:element minOccurs="0" ref="transitions"/>
                            <xs:element ref="Recall"/>
                            <xs:element minOccurs="0" ref="transitions"/>
                            <xs:element ref="Practice"/>
                            <xs:element minOccurs="0" ref="transitions"/>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="Example">
        <xs:complexType>
            <xs:complexContent>
                <xs:restriction base="xs:anyType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="Recall">
        <xs:complexType>
            <xs:complexContent>
                <xs:restriction base="xs:anyType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="Rule">
        <xs:complexType>
            <xs:complexContent>
                <xs:restriction base="xs:anyType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="Practice">
        <xs:complexType>
            <xs:complexContent>
                <xs:restriction base="xs:anyType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="TrainingApplication">
        <xs:annotation>
            <xs:appinfo>
                <fg:node-info message="Training Application">
                    <fg:message>Training Application is a type of transition that manages starting the lesson with the training application.</fg:message>
                    <fg:message>Refer to "Help" for more information.</fg:message>
                </fg:node-info>
            </xs:appinfo>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element minOccurs="0" ref="transitionName"/>
                <xs:element ref="dkfRef"/>
                <xs:element minOccurs="0" name="options">
                    <xs:annotation>
                        <xs:appinfo>
                            <fg:node-info message="Training App Options">
                                <fg:message>Available options for this training application instance.</fg:message>
                                <fg:message>Refer to "Help" for more information.</fg:message>
                            </fg:node-info>
                        </xs:appinfo>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element minOccurs="0" ref="disableInstInterImpl"/>
                            <xs:element minOccurs="0" ref="showAvatarInitially"/>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
                <xs:element ref="interops"/>
                <xs:element maxOccurs="1" minOccurs="0" ref="Guidance"/>
                <xs:element name="finishedWhen" type="common:TrainingApplicationStateEnumType" default="Stopped">
                    <xs:annotation>
                        <xs:appinfo>
                            <fg:node-info message="Finished When...">
                                <fg:message>Specifies the training application state that will cause the Training Application transition to be finished, meaning when can the next transition (in the list of transitions) start.</fg:message>
                                <fg:message>Refer to "Help" for more information.</fg:message>
                            </fg:node-info>
                        </xs:appinfo>
                    </xs:annotation>
                </xs:element>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="dkfRef">
        <xs:annotation>
            <xs:appinfo>
                <fg:node-info message="Domain Knowledge File">
                    <fg:message>The domain knowledge file to use to configure the assessment logic for the lesson.</fg:message>
                    <fg:message>Refer to "Help" for more information.</fg:message>
                </fg:node-info>
            </xs:appinfo>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="file">
                    <xs:annotation>
                        <xs:appinfo>
                            <fg:node-info editor-class="mil.arl.gift.tools.authoring.cat.custnodes.DKFSelectionDialog" exposed="true" message="File name">
                                <fg:message>The relative DKF name from the Domain directory as specified by the domain properties.</fg:message>
                                <fg:message>Refer to "Help" for more information.</fg:message>
                            </fg:node-info>
                        </xs:appinfo>
                    </xs:annotation>
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:minLength value="8"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:element>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="disableInstInterImpl" type="common:booleanEnum">
        <xs:annotation>
            <xs:appinfo>
                <fg:node-info message="Disable Instructional Intervention Implementation(s)">
                    <fg:message>Whether or not to disable the implementation of instructional intervention strategies (e.g. Feedback) requested by the Pedagogical model.</fg:message>
                    <fg:message>Refer to "Help" for more information.</fg:message>
                </fg:node-info>
            </xs:appinfo>
        </xs:annotation>
    </xs:element>
    <xs:element name="showAvatarInitially">
        <xs:annotation>
            <xs:appinfo>
                <fg:node-info message="Show Avatar Initially">
                    <fg:message>The initial avatar to show when the training application transition is started.</fg:message>
                    <fg:message>If no avatar information is provided here, the default tutor avatar will be used.</fg:message>
                    <fg:message>Refer to "Help" for more information.</fg:message>
                </fg:node-info>
            </xs:appinfo>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:choice minOccurs="0">
                    <xs:element name="mediaSemantics">
                        <xs:annotation>
                            <xs:appinfo>
                                <fg:node-info exposed="true" message="Media Semantics">
                                    <fg:message>Specify the Media Semantics Character builder project information that contains an avatar.</fg:message>
                                </fg:node-info>
                            </xs:appinfo>
                        </xs:annotation>
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element name="Avatar">
                                    <xs:annotation>
                                        <xs:appinfo>
                                            <fg:node-info editor-class="mil.arl.gift.tools.authoring.common.custnodes.ConfigurableFileSelectionDialog" exposed="true" message="Avatar File">
                                                <fg:message>The avatar file created by a Media Semantics Character builder project.</fg:message>
                                                <fg:param name="title">Select the Media Semantics Character Avatar file</fg:param>
                                                <fg:param name="extension">htm|html</fg:param>
                                                <fg:param name="information">Please select the Media Semantics Character Avatar file that contains the avatar you wish to display.</fg:param>
                                            </fg:node-info>
                                        </xs:appinfo>
                                    </xs:annotation>
                                    <xs:simpleType>
                                        <xs:restriction base="xs:string">
                                            <xs:minLength value="6"/>
                                        </xs:restriction>
                                    </xs:simpleType>
                                </xs:element>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                </xs:choice>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="interops">
        <xs:annotation>
            <xs:appinfo>
                <fg:node-info message="Interop Implementations">
                    <fg:message>List of interoperability implementations (e.g. DIS, VBS2) in the Gateway module that will be used during the lesson to communicate training application content to/from GIFT.</fg:message>
                    <fg:message>Refer to "Help" for more information.</fg:message>
                </fg:node-info>
            </xs:appinfo>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="1" ref="interop"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="interop">
        <xs:annotation>
            <xs:appinfo>
                <fg:node-info message="Interop Implementations">
                    <fg:message>Interoperability implementation (e.g. DIS, VBS2) in the Gateway module that will be used during the lesson to communicate training application content to/from GIFT.</fg:message>
                    <fg:message>Refer to "Help" for more information.</fg:message>
                </fg:node-info>
            </xs:appinfo>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="InteropImpl"/>
                <xs:element ref="InteropInputs"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="InteropImpl">
        <xs:annotation>
            <xs:appinfo>
                <fg:node-info editor-class="mil.arl.gift.tools.authoring.cat.custnodes.InteropDialog" message="Interop Implementation">
                    <fg:message>Specify the class path to the Interop Interface Implementation (e.g. gateway.interop.dis.DISInterface) that contains the logic for the Gateway module to interoperate with a training application.</fg:message>
                    <fg:message>Refer to "Help" for more information.</fg:message>
                </fg:node-info>
            </xs:appinfo>
        </xs:annotation>
        <xs:simpleType>
            <xs:restriction base="xs:string">
                <xs:minLength value="1"/>
            </xs:restriction>
        </xs:simpleType>
    </xs:element>
    <xs:element name="InteropInputs">
        <xs:annotation>
            <xs:appinfo>
                <fg:node-info exposed="true" message="Interop Implementation Inputs">
                    <fg:message>Specify inputs to the selected Gateway module interop interface implementation.  These inputs will be sent by the Domain module to the Gateway module based on the type of Siman message being sent.</fg:message>
                    <fg:message>Refer to "Help" for more information.</fg:message>
                </fg:node-info>
            </xs:appinfo>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:choice>
					<xs:element ref="SimpleExampleTAInteropInputs"/>
                    <xs:element ref="VBS2InteropInputs"/>
                    <xs:element ref="DISInteropInputs"/>
                    <xs:element ref="PowerPointInteropInputs"/>
                    <xs:element ref="TC3InteropInputs"/>
                    <xs:element ref="SCATTInteropInputs"/>
                    <xs:element ref="CustomInteropInputs"/>
                </xs:choice>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="Guidance">
        <xs:annotation>
            <xs:appinfo>
                <fg:node-info message="Guidance">
                    <fg:message>Guidance is a type of transition that helps guide the learner.  For example the TUI can use Guidance to display a message to the learner.</fg:message>
                    <fg:message>Refer to "Help" for more information.</fg:message>
                </fg:node-info>
            </xs:appinfo>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element minOccurs="0" ref="transitionName"/>
                <xs:choice>
                    <xs:element name="message">
                        <xs:annotation>
                            <xs:appinfo>
                                <fg:node-info message="Guidance Message Content">
                                    <fg:message>String guidance message to display in the tutor.</fg:message>
                                </fg:node-info>
                            </xs:appinfo>
                        </xs:annotation>
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element name="content">
                                    <xs:simpleType>
                                        <xs:restriction base="xs:string">
                                            <xs:minLength value="1"/>
                                        </xs:restriction>
                                    </xs:simpleType>
                                </xs:element>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                    <xs:element name="URL">
                        <xs:annotation>
                            <xs:appinfo>
                                <fg:node-info message="Guidance URL">
                                    <fg:message>A webpage URL to display on guidance.</fg:message>
                                </fg:node-info>
                            </xs:appinfo>
                        </xs:annotation>
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element name="address">
                                    <xs:annotation>
                                        <xs:appinfo>
                                            <fg:node-info message="URL Address">
                                                <fg:message>Note: the address must contain the URL scheme prefix such as http://.</fg:message>
                                            </fg:node-info>
                                        </xs:appinfo>
                                    </xs:annotation>
                                    <xs:simpleType>
                                        <xs:restriction base="xs:string">
                                            <xs:minLength value="4"/>
                                        </xs:restriction>
                                    </xs:simpleType>
                                </xs:element>
                                <xs:element minOccurs="0" name="message">
                                    <xs:annotation>
                                        <xs:appinfo>
                                            <fg:node-info message="Message">
                                                <fg:message>Informative message (e.g. instructions) about the guidance webpage.</fg:message>
                                            </fg:node-info>
                                        </xs:appinfo>
                                    </xs:annotation>
                                    <xs:simpleType>
                                        <xs:restriction base="xs:string">
                                            <xs:minLength value="4"/>
                                        </xs:restriction>
                                    </xs:simpleType>
                                </xs:element>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                    <xs:element name="file">
                        <xs:annotation>
                            <xs:appinfo>
                                <fg:node-info message="Guidance File">
                                    <fg:message>File containing Guidance content.</fg:message>
                                    <fg:message>Refer to "Help" for more information.</fg:message>
                                </fg:node-info>
                            </xs:appinfo>
                        </xs:annotation>
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element name="HTML">
                                    <xs:annotation>
                                        <xs:appinfo>
                                            <fg:node-info editor-class="mil.arl.gift.tools.authoring.common.custnodes.ConfigurableFileSelectionDialog" exposed="true" message="HTML File">
                                                <fg:message>An html file containing the guidance content.</fg:message>
                                                <fg:param name="title">Select an HTML file</fg:param>
                                                <fg:param name="extension">htm|html</fg:param>
                                                <fg:param name="information">Please select an HTML file that contains the guidance content.</fg:param>
                                            </fg:node-info>
                                        </xs:appinfo>
                                    </xs:annotation>
                                    <xs:simpleType>
                                        <xs:restriction base="xs:string">
                                            <xs:minLength value="6"/>
                                        </xs:restriction>
                                    </xs:simpleType>
                                </xs:element>
								<xs:element minOccurs="0" name="message">
                                    <xs:annotation>
                                        <xs:appinfo>
                                            <fg:node-info message="Message">
                                                <fg:message>Informative message (e.g. instructions) about the guidance webpage.</fg:message>
                                            </fg:node-info>
                                        </xs:appinfo>
                                    </xs:annotation>
                                    <xs:simpleType>
                                        <xs:restriction base="xs:string">
                                            <xs:minLength value="4"/>
                                        </xs:restriction>
                                    </xs:simpleType>
                                </xs:element>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                </xs:choice>
                <xs:element minOccurs="0" name="displayTime">
                    <xs:annotation>
                        <xs:appinfo>
                            <fg:node-info message="Display Time">
                                <fg:message>Amount of time in seconds to display the message. Not providing a value means that a button will be created below the message that, when clicked, will cause the next transition to be executed.</fg:message>
                                <fg:message>Refer to "Help" for more information.</fg:message>
                            </fg:node-info>
                        </xs:appinfo>
                    </xs:annotation>
                    <xs:simpleType>
                        <xs:restriction base="xs:decimal">
                            <xs:minInclusive value="0"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:element>
                <xs:element minOccurs="0" name="fullScreen" type="common:booleanEnum">
                    <xs:annotation>
                        <xs:appinfo>
                            <fg:node-info message="Display Full Screen">
                                <fg:message>Whether or not to display the message in full screen mode.  The default is false, meaning the message will be displayed in the horizontally compacted TUI.</fg:message>
                                <fg:message>Refer to "Help" for more information.</fg:message>
                            </fg:node-info>
                        </xs:appinfo>
                    </xs:annotation>
                </xs:element>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="PresentSurvey">
        <xs:annotation>
            <xs:appinfo>
                <fg:node-info message="Present Survey">
                    <fg:message>Present a survey for the learner to complete.  For example the TUI can use Present Survey to display a Pre-lesson survey to the learner.</fg:message>
                    <fg:message>Refer to "Help" for more information.</fg:message>
                </fg:node-info>
            </xs:appinfo>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:choice>
                    <xs:element ref="common:GIFTSurveyKey"/>
                    <xs:element ref="AutoTutorSession"/>
                </xs:choice>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="AAR">
        <xs:annotation>
            <xs:appinfo>
                <fg:node-info message="After Action Review">
                    <fg:message>AAR is a type of transition that presents a review of the learner's actions during a lesson.</fg:message>
                    <fg:message>Refer to "Help" for more information.</fg:message>
                </fg:node-info>
            </xs:appinfo>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element minOccurs="0" ref="transitionName"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="LessonMaterial">
        <xs:annotation>
            <xs:appinfo>
                <fg:node-info message="Lesson Material">
                    <fg:message>Lesson Material is a type of transition that presents a self-guided view of material pertaining to the lesson.</fg:message>
                    <fg:message>Refer to "Help" for more information.</fg:message>
                </fg:node-info>
            </xs:appinfo>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element minOccurs="0" ref="transitionName"/>
                <xs:element minOccurs="0" ref="LessonMaterialList"/>
                <xs:element minOccurs="0" ref="lessonMaterialFiles"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="lessonMaterialFiles">
        <xs:annotation>
            <xs:appinfo>
                <fg:node-info message="Lesson Material Files">
                    <fg:message>List of Lesson Material files with references to lesson material to present.</fg:message>
                    <fg:message>Refer to "Help" for more information.</fg:message>
                </fg:node-info>
            </xs:appinfo>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" name="file">
                    <xs:annotation>
                        <xs:appinfo>
                            <fg:node-info editor-class="mil.arl.gift.tools.authoring.cat.custnodes.LessonMaterialSelectionDialog" message="File name">
                                <fg:message>The relative Lesson Material file name from the Training Material directory as specified by the domain properties.</fg:message>
                                <fg:message>Refer to "Help" for more information.</fg:message>
                            </fg:node-info>
                        </xs:appinfo>
                    </xs:annotation>
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:minLength value="8"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:element>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="AutoTutorSession">
        <xs:annotation>
            <xs:appinfo>
                <fg:node-info message="Auto Tutor Session">
                    <fg:message>Specifies that an Auto Tutor session should be presented to the user.</fg:message>
                </fg:node-info>
            </xs:appinfo>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="dkfRef"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
	<xs:element name="SimpleExampleTAInteropInputs">
        <xs:annotation>
            <xs:appinfo>
                <fg:node-info exposed="true" message="Simple Example TA Interoperability Interface Inputs">
                    <fg:message>By specifying the Simple Example TA Interop element for the Training Application, the Gateway module will be configured to use the Simple Example TA Interop configuration specified in the interopConfig.xml for the duration of the lesson that uses this instance of the training application.</fg:message>
                </fg:node-info>
            </xs:appinfo>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="loadArgs">
                    <xs:annotation>
                        <xs:appinfo>
                            <fg:node-info exposed="true" message="Load Arguments">
                                <fg:message>These are the arguments sent to the Gateway module with the Siman.Load message.  The arguments are used to configure or execute logic in the interop interface.</fg:message>
                            </fg:node-info>
                        </xs:appinfo>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element name="ScenarioName">
                                <xs:annotation>
                                    <xs:appinfo>
                                        <fg:node-info exposed="true" message="Scenario Name">
                                            <fg:message>Name of an Example Scenario.  The value is used by Example scripting to load the scenario.  The value matches the name of a FITS scenario folder and is one of the entries shown in FITS scenario selection screens.</fg:message>
                                        </fg:node-info>
                                    </xs:appinfo>
                                </xs:annotation>
                                <xs:simpleType>
                                    <xs:restriction base="xs:string">
                                        <xs:minLength value="1"/>
                                    </xs:restriction>
                                </xs:simpleType>
                            </xs:element>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="VBS2InteropInputs">
        <xs:annotation>
            <xs:appinfo>
                <fg:node-info exposed="true" message="VBS2 Interoperability Interface Inputs">
                    <fg:message>By specifying the VBS2 Interop element for the Training Application, the Gateway module will be configured to use the VBS2 Interop configuration specified in the interopConfig.xml for the duration of the lesson that uses this instance of the training application.</fg:message>
                    <fg:message>Refer to "Help" for more information.</fg:message>
                </fg:node-info>
            </xs:appinfo>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="loadArgs">
                    <xs:annotation>
                        <xs:appinfo>
                            <fg:node-info exposed="true" message="Load Arguments">
                                <fg:message>These are the arguments sent to the Gateway module with the Siman.Load message.  The arguments are used to configure or execute logic in the interop interface.</fg:message>
                                <fg:message>Refer to "Help" for more information.</fg:message>
                            </fg:node-info>
                        </xs:appinfo>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element name="ScenarioName">
                                <xs:annotation>
                                    <xs:appinfo>
                                        <fg:node-info exposed="true" message="Scenario Name">
                                            <fg:message>Name of a VBS2 Scenario.  The value is used by VBS2 scripting to load the scenario.  The value matches the name of a VBS2 scenario folder and is one of the entries shown in VBS2 scenario selection screens.</fg:message>
                                            <fg:message>Refer to "Help" for more information.</fg:message>
                                        </fg:node-info>
                                    </xs:appinfo>
                                </xs:annotation>
                                <xs:simpleType>
                                    <xs:restriction base="xs:string">
                                        <xs:minLength value="1"/>
                                    </xs:restriction>
                                </xs:simpleType>
                            </xs:element>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="DISInteropInputs">
        <xs:annotation>
            <xs:appinfo>
                <fg:node-info exposed="true" message="DIS Interoperability Interface">
                    <fg:message>By specifying the DIS Interop element for the Training Application, the Gateway module will be configured to use the DIS Interop configuration specified in the interopConfig.xml for the duration of the lesson that uses this instance of the training application.</fg:message>
                    <fg:message>Refer to "Help" for more information.</fg:message>
                </fg:node-info>
            </xs:appinfo>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="loadArgs">
                    <xs:annotation>
                        <xs:appinfo>
                            <fg:node-info exposed="true" message="Load Arguments">
                                <fg:message>These are the arguments sent to the Gateway module with the Siman.Load message.  The arguments are used to configure or execute logic in the interop interface.</fg:message>
                                <fg:message>Refer to "Help" for more information.</fg:message>
                            </fg:node-info>
                        </xs:appinfo>
                    </xs:annotation>
                    <xs:complexType/>
                </xs:element>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="PowerPointInteropInputs">
        <xs:annotation>
            <xs:appinfo>
                <fg:node-info exposed="true" message="PowerPoint Interoperability Interface">
                    <fg:message>By specifying the PPT Interop element for the Training Application, the Gateway module will be configured to use the PPT Interop configuration specified in the interopConfig.xml for the duration of the lesson that uses this instance of the training application.</fg:message>
                    <fg:message>Refer to "Help" for more information.</fg:message>
                </fg:node-info>
            </xs:appinfo>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="loadArgs">
                    <xs:annotation>
                        <xs:appinfo>
                            <fg:node-info exposed="true" message="Load Arguments">
                                <fg:message>These are the arguments sent to the Gateway module with the Siman.Load message.  The arguments are used to configure or execute logic in the interop interface.</fg:message>
                                <fg:message>Refer to "Help" for more information.</fg:message>
                            </fg:node-info>
                        </xs:appinfo>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element name="ShowFile">
                                <xs:annotation>
                                    <xs:appinfo>
                                        <fg:node-info editor-class="mil.arl.gift.tools.authoring.cat.custnodes.FileSelectionDialog" exposed="true" message="PowerPoint Show File">
                                            <fg:message>The powerpoint show file to load into PowerPoint (including file extension).  For now, the path is relative to the Domain folder (i.e. "GIFT/../Domain/").</fg:message>
                                            <fg:message>Refer to "Help" for more information.</fg:message>
                                        </fg:node-info>
                                    </xs:appinfo>
                                </xs:annotation>
                                <xs:simpleType>
                                    <xs:restriction base="xs:string">
                                        <xs:minLength value="5"/>
                                    </xs:restriction>
                                </xs:simpleType>
                            </xs:element>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="TC3InteropInputs">
        <xs:annotation>
            <xs:appinfo>
                <fg:node-info exposed="true" message="TC3 Interoperability Interface Inputs">
                    <fg:message>By specifying the TC3 Interop element for the Training Application, the Gateway module will be configured to use the TC3 Interop configuration specified in the interopConfig.xml for the duration of the lesson that uses this instance of the training application.</fg:message>
                    <fg:message>Refer to "Help" for more information.</fg:message>
                </fg:node-info>
            </xs:appinfo>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="loadArgs">
                    <xs:annotation>
                        <xs:appinfo>
                            <fg:node-info exposed="true" message="Load Arguments">
                                <fg:message>These are the arguments sent to the Gateway module with the Siman.Load message.  The arguments are used to configure or execute logic in the interop interface.</fg:message>
                                <fg:message>Refer to "Help" for more information.</fg:message>
                            </fg:node-info>
                        </xs:appinfo>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element name="ScenarioName">
                                <xs:annotation>
                                    <xs:appinfo>
                                        <fg:node-info exposed="true" message="Scenario Name">
                                            <fg:message>Name of a TC3 Scenario.  The value is used by TC3 to load the scenario.  The value matches the name of a TC3 scenario that can be loaded via the GIFT TC3 Gateway plugin.</fg:message>
                                            <fg:message>Refer to "Help" for more information.</fg:message>
                                        </fg:node-info>
                                    </xs:appinfo>
                                </xs:annotation>
                                <xs:simpleType>
                                    <xs:restriction base="xs:string">
                                        <xs:minLength value="1"/>
                                    </xs:restriction>
                                </xs:simpleType>
                            </xs:element>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="SCATTInteropInputs">
        <xs:annotation>
            <xs:appinfo>
                <fg:node-info exposed="true" message="SCATT Interoperability Interface">
                    <fg:message>By specifying the SCATT Interop element for the Training Application, the Gateway module will be configured to use the SCATT Interop configuration specified in the interopConfig.xml for the duration of the lesson that uses this instance of the training application.</fg:message>
                    <fg:message>Refer to "Help" for more information.</fg:message>
                </fg:node-info>
            </xs:appinfo>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="loadArgs">
                    <xs:annotation>
                        <xs:appinfo>
                            <fg:node-info exposed="true" message="Load Arguments">
                                <fg:message>These are the arguments sent to the Gateway module with the Siman.Load message.  The arguments are used to configure or execute logic in the interop interface.</fg:message>
                                <fg:message>Refer to "Help" for more information.</fg:message>
                            </fg:node-info>
                        </xs:appinfo>
                    </xs:annotation>
                    <xs:complexType/>
                </xs:element>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="CustomInteropInputs">
        <xs:annotation>
            <xs:appinfo>
                <fg:node-info exposed="true" message="Custom Interoperability Interface">
                    <fg:message>The Custom interop allows the DKF Authorer to specify their own interop interface to be used. the Gateway module will be configured to use the custom implementation interop configuration specified in the interopConfig.xml for the duration of the lesson that uses this instance of the training application.</fg:message>
                    <fg:message>Refer to "Help" for more information.</fg:message>
                </fg:node-info>
            </xs:appinfo>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="loadArgs">
                    <xs:annotation>
                        <xs:appinfo>
                            <fg:node-info exposed="true" message="Load Arguments">
                                <fg:message>These are the arguments sent to the Gateway module with the Siman.Load message.  The arguments are used to configure or execute logic in the interop interface.</fg:message>
                                <fg:message>Refer to "Help" for more information.</fg:message>
                            </fg:node-info>
                        </xs:appinfo>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element maxOccurs="unbounded" ref="common:nvpair"/>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <!-- Start of Pedagogy related items -->
    <xs:element name="actions">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="stateTransitions">
                    <xs:annotation>
                        <xs:appinfo>
                            <fg:node-info exposed="true" message="State Transitions">
                                <fg:message>A state transitions corresponds to a change in a learner state from the current value to the next value.</fg:message>
                                <fg:message>Refer to "Help" for more information.</fg:message>
                            </fg:node-info>
                        </xs:appinfo>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element maxOccurs="unbounded" minOccurs="0" name="stateTransition">
                                <xs:complexType>
                                    <xs:sequence>
                                        <xs:element name="LogicalExpression">
                                            <xs:annotation>
                                                <xs:appinfo>
                                                    <fg:node-info message="State Logical Expression">
                                                        <fg:message>Allows for the creation of a logical expression on learner state attribute transitions.  This allows for more complex and fine tuned instructional strategy selection.</fg:message>
                                                        <fg:message>Note: For now every attribute transition child is analyzed with an AND operator.</fg:message>
                                                    </fg:node-info>
                                                </xs:appinfo>
                                            </xs:annotation>
                                            <xs:complexType>
                                                <xs:sequence>
                                                    <xs:choice maxOccurs="unbounded">
                                                        <xs:element ref="ped:LearnerStateTransitionEnum"/>
                                                    </xs:choice>
                                                </xs:sequence>
                                            </xs:complexType>
                                        </xs:element>
                                        <xs:element name="strategyChoices">
                                            <xs:complexType>
                                                <xs:sequence>
                                                    <xs:element maxOccurs="unbounded" ref="strategyRef"/>
                                                </xs:sequence>
                                            </xs:complexType>
                                        </xs:element>
                                    </xs:sequence>
                                </xs:complexType>
                            </xs:element>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
                <xs:element name="instructionalStrategies">
                    <xs:annotation>
                        <xs:appinfo>
                            <fg:node-info exposed="true" message="Instructional Strategies">
                                <fg:message>Specifies the various instructional strategies available for this scenario.</fg:message>
                                <fg:message>Refer to "Help" for more information.</fg:message>
                            </fg:node-info>
                        </xs:appinfo>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element maxOccurs="unbounded" minOccurs="0" ref="strategy"/>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="strategyRef">
        <xs:annotation>
            <xs:appinfo>
                <fg:node-info exposed="true" message="Strategy Reference">
                    <fg:message>References the unique name of an instructional strategy in the strategies list.</fg:message>
                    <fg:message>Refer to "Help" for more information.</fg:message>
                </fg:node-info>
            </xs:appinfo>
        </xs:annotation>
        <xs:complexType>
            <xs:attribute name="name" use="required">
                <xs:annotation>
                    <xs:appinfo>
                        <fg:node-info editor-class="mil.arl.gift.tools.authoring.cat.custnodes.StrategyReferenceDialog" exposed="true" message="Strategy Name">
                            <fg:message>Unique name of an instructional strategy.</fg:message>
                            <fg:message>Refer to "Help" for more information.</fg:message>
                        </fg:node-info>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="strategy">
        <xs:complexType>
            <xs:sequence/>
            <xs:attribute name="name" use="required">
                <xs:annotation>
                    <xs:appinfo>
                        <fg:node-info exposed="true" message="Strategy Name">
                            <fg:message>Unique name of an instructional strategy.</fg:message>
                            <fg:message>Refer to "Help" for more information.</fg:message>
                        </fg:node-info>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <!-- End of Pedagogy related items -->
</xs:schema>
