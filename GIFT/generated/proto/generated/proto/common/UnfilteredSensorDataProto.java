// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UnfilteredSensorData.proto

package generated.proto.common;

public final class UnfilteredSensorDataProto {
  private UnfilteredSensorDataProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface UnfilteredSensorDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:UnfilteredSensorData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The name of the sensor. 
     * </pre>
     *
     * <code>.google.protobuf.StringValue sensor_name = 1;</code>
     */
    boolean hasSensorName();
    /**
     * <pre>
     * The name of the sensor. 
     * </pre>
     *
     * <code>.google.protobuf.StringValue sensor_name = 1;</code>
     */
    com.google.protobuf.StringValue getSensorName();
    /**
     * <pre>
     * The name of the sensor. 
     * </pre>
     *
     * <code>.google.protobuf.StringValue sensor_name = 1;</code>
     */
    com.google.protobuf.StringValueOrBuilder getSensorNameOrBuilder();

    /**
     * <pre>
     * The type of sensor. 
     * </pre>
     *
     * <code>.AbstractEnumObject sensor_type = 2;</code>
     */
    boolean hasSensorType();
    /**
     * <pre>
     * The type of sensor. 
     * </pre>
     *
     * <code>.AbstractEnumObject sensor_type = 2;</code>
     */
    generated.proto.common.AbstractEnumObjectProto.AbstractEnumObject getSensorType();
    /**
     * <pre>
     * The type of sensor. 
     * </pre>
     *
     * <code>.AbstractEnumObject sensor_type = 2;</code>
     */
    generated.proto.common.AbstractEnumObjectProto.AbstractEnumObjectOrBuilder getSensorTypeOrBuilder();

    /**
     * <pre>
     * The amount of time that has passed. 
     * </pre>
     *
     * <code>.google.protobuf.Timestamp elapsed_time = 3;</code>
     */
    boolean hasElapsedTime();
    /**
     * <pre>
     * The amount of time that has passed. 
     * </pre>
     *
     * <code>.google.protobuf.Timestamp elapsed_time = 3;</code>
     */
    com.google.protobuf.Timestamp getElapsedTime();
    /**
     * <pre>
     * The amount of time that has passed. 
     * </pre>
     *
     * <code>.google.protobuf.Timestamp elapsed_time = 3;</code>
     */
    com.google.protobuf.TimestampOrBuilder getElapsedTimeOrBuilder();

    /**
     * <pre>
     * The map of sensor attribute to values. 
     * </pre>
     *
     * <code>map&lt;string, .AbstractSensorAttributeValue&gt; attribute_values = 4;</code>
     */
    int getAttributeValuesCount();
    /**
     * <pre>
     * The map of sensor attribute to values. 
     * </pre>
     *
     * <code>map&lt;string, .AbstractSensorAttributeValue&gt; attribute_values = 4;</code>
     */
    boolean containsAttributeValues(
        java.lang.String key);
    /**
     * Use {@link #getAttributeValuesMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, generated.proto.common.AbstractSensorAttributeValueProto.AbstractSensorAttributeValue>
    getAttributeValues();
    /**
     * <pre>
     * The map of sensor attribute to values. 
     * </pre>
     *
     * <code>map&lt;string, .AbstractSensorAttributeValue&gt; attribute_values = 4;</code>
     */
    java.util.Map<java.lang.String, generated.proto.common.AbstractSensorAttributeValueProto.AbstractSensorAttributeValue>
    getAttributeValuesMap();
    /**
     * <pre>
     * The map of sensor attribute to values. 
     * </pre>
     *
     * <code>map&lt;string, .AbstractSensorAttributeValue&gt; attribute_values = 4;</code>
     */

    generated.proto.common.AbstractSensorAttributeValueProto.AbstractSensorAttributeValue getAttributeValuesOrDefault(
        java.lang.String key,
        generated.proto.common.AbstractSensorAttributeValueProto.AbstractSensorAttributeValue defaultValue);
    /**
     * <pre>
     * The map of sensor attribute to values. 
     * </pre>
     *
     * <code>map&lt;string, .AbstractSensorAttributeValue&gt; attribute_values = 4;</code>
     */

    generated.proto.common.AbstractSensorAttributeValueProto.AbstractSensorAttributeValue getAttributeValuesOrThrow(
        java.lang.String key);
  }
  /**
   * <pre>
   * This message contains information produced by raw sensor data. 
   * </pre>
   *
   * Protobuf type {@code UnfilteredSensorData}
   */
  public  static final class UnfilteredSensorData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:UnfilteredSensorData)
      UnfilteredSensorDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use UnfilteredSensorData.newBuilder() to construct.
    private UnfilteredSensorData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private UnfilteredSensorData() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private UnfilteredSensorData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.StringValue.Builder subBuilder = null;
              if (sensorName_ != null) {
                subBuilder = sensorName_.toBuilder();
              }
              sensorName_ = input.readMessage(com.google.protobuf.StringValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(sensorName_);
                sensorName_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              generated.proto.common.AbstractEnumObjectProto.AbstractEnumObject.Builder subBuilder = null;
              if (sensorType_ != null) {
                subBuilder = sensorType_.toBuilder();
              }
              sensorType_ = input.readMessage(generated.proto.common.AbstractEnumObjectProto.AbstractEnumObject.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(sensorType_);
                sensorType_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              com.google.protobuf.Timestamp.Builder subBuilder = null;
              if (elapsedTime_ != null) {
                subBuilder = elapsedTime_.toBuilder();
              }
              elapsedTime_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(elapsedTime_);
                elapsedTime_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                attributeValues_ = com.google.protobuf.MapField.newMapField(
                    AttributeValuesDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000008;
              }
              com.google.protobuf.MapEntry<java.lang.String, generated.proto.common.AbstractSensorAttributeValueProto.AbstractSensorAttributeValue>
              attributeValues__ = input.readMessage(
                  AttributeValuesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              attributeValues_.getMutableMap().put(
                  attributeValues__.getKey(), attributeValues__.getValue());
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return generated.proto.common.UnfilteredSensorDataProto.internal_static_UnfilteredSensorData_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 4:
          return internalGetAttributeValues();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return generated.proto.common.UnfilteredSensorDataProto.internal_static_UnfilteredSensorData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              generated.proto.common.UnfilteredSensorDataProto.UnfilteredSensorData.class, generated.proto.common.UnfilteredSensorDataProto.UnfilteredSensorData.Builder.class);
    }

    private int bitField0_;
    public static final int SENSOR_NAME_FIELD_NUMBER = 1;
    private com.google.protobuf.StringValue sensorName_;
    /**
     * <pre>
     * The name of the sensor. 
     * </pre>
     *
     * <code>.google.protobuf.StringValue sensor_name = 1;</code>
     */
    public boolean hasSensorName() {
      return sensorName_ != null;
    }
    /**
     * <pre>
     * The name of the sensor. 
     * </pre>
     *
     * <code>.google.protobuf.StringValue sensor_name = 1;</code>
     */
    public com.google.protobuf.StringValue getSensorName() {
      return sensorName_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : sensorName_;
    }
    /**
     * <pre>
     * The name of the sensor. 
     * </pre>
     *
     * <code>.google.protobuf.StringValue sensor_name = 1;</code>
     */
    public com.google.protobuf.StringValueOrBuilder getSensorNameOrBuilder() {
      return getSensorName();
    }

    public static final int SENSOR_TYPE_FIELD_NUMBER = 2;
    private generated.proto.common.AbstractEnumObjectProto.AbstractEnumObject sensorType_;
    /**
     * <pre>
     * The type of sensor. 
     * </pre>
     *
     * <code>.AbstractEnumObject sensor_type = 2;</code>
     */
    public boolean hasSensorType() {
      return sensorType_ != null;
    }
    /**
     * <pre>
     * The type of sensor. 
     * </pre>
     *
     * <code>.AbstractEnumObject sensor_type = 2;</code>
     */
    public generated.proto.common.AbstractEnumObjectProto.AbstractEnumObject getSensorType() {
      return sensorType_ == null ? generated.proto.common.AbstractEnumObjectProto.AbstractEnumObject.getDefaultInstance() : sensorType_;
    }
    /**
     * <pre>
     * The type of sensor. 
     * </pre>
     *
     * <code>.AbstractEnumObject sensor_type = 2;</code>
     */
    public generated.proto.common.AbstractEnumObjectProto.AbstractEnumObjectOrBuilder getSensorTypeOrBuilder() {
      return getSensorType();
    }

    public static final int ELAPSED_TIME_FIELD_NUMBER = 3;
    private com.google.protobuf.Timestamp elapsedTime_;
    /**
     * <pre>
     * The amount of time that has passed. 
     * </pre>
     *
     * <code>.google.protobuf.Timestamp elapsed_time = 3;</code>
     */
    public boolean hasElapsedTime() {
      return elapsedTime_ != null;
    }
    /**
     * <pre>
     * The amount of time that has passed. 
     * </pre>
     *
     * <code>.google.protobuf.Timestamp elapsed_time = 3;</code>
     */
    public com.google.protobuf.Timestamp getElapsedTime() {
      return elapsedTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : elapsedTime_;
    }
    /**
     * <pre>
     * The amount of time that has passed. 
     * </pre>
     *
     * <code>.google.protobuf.Timestamp elapsed_time = 3;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getElapsedTimeOrBuilder() {
      return getElapsedTime();
    }

    public static final int ATTRIBUTE_VALUES_FIELD_NUMBER = 4;
    private static final class AttributeValuesDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, generated.proto.common.AbstractSensorAttributeValueProto.AbstractSensorAttributeValue> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, generated.proto.common.AbstractSensorAttributeValueProto.AbstractSensorAttributeValue>newDefaultInstance(
                  generated.proto.common.UnfilteredSensorDataProto.internal_static_UnfilteredSensorData_AttributeValuesEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  generated.proto.common.AbstractSensorAttributeValueProto.AbstractSensorAttributeValue.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.String, generated.proto.common.AbstractSensorAttributeValueProto.AbstractSensorAttributeValue> attributeValues_;
    private com.google.protobuf.MapField<java.lang.String, generated.proto.common.AbstractSensorAttributeValueProto.AbstractSensorAttributeValue>
    internalGetAttributeValues() {
      if (attributeValues_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            AttributeValuesDefaultEntryHolder.defaultEntry);
      }
      return attributeValues_;
    }

    public int getAttributeValuesCount() {
      return internalGetAttributeValues().getMap().size();
    }
    /**
     * <pre>
     * The map of sensor attribute to values. 
     * </pre>
     *
     * <code>map&lt;string, .AbstractSensorAttributeValue&gt; attribute_values = 4;</code>
     */

    public boolean containsAttributeValues(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetAttributeValues().getMap().containsKey(key);
    }
    /**
     * Use {@link #getAttributeValuesMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, generated.proto.common.AbstractSensorAttributeValueProto.AbstractSensorAttributeValue> getAttributeValues() {
      return getAttributeValuesMap();
    }
    /**
     * <pre>
     * The map of sensor attribute to values. 
     * </pre>
     *
     * <code>map&lt;string, .AbstractSensorAttributeValue&gt; attribute_values = 4;</code>
     */

    public java.util.Map<java.lang.String, generated.proto.common.AbstractSensorAttributeValueProto.AbstractSensorAttributeValue> getAttributeValuesMap() {
      return internalGetAttributeValues().getMap();
    }
    /**
     * <pre>
     * The map of sensor attribute to values. 
     * </pre>
     *
     * <code>map&lt;string, .AbstractSensorAttributeValue&gt; attribute_values = 4;</code>
     */

    public generated.proto.common.AbstractSensorAttributeValueProto.AbstractSensorAttributeValue getAttributeValuesOrDefault(
        java.lang.String key,
        generated.proto.common.AbstractSensorAttributeValueProto.AbstractSensorAttributeValue defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, generated.proto.common.AbstractSensorAttributeValueProto.AbstractSensorAttributeValue> map =
          internalGetAttributeValues().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * The map of sensor attribute to values. 
     * </pre>
     *
     * <code>map&lt;string, .AbstractSensorAttributeValue&gt; attribute_values = 4;</code>
     */

    public generated.proto.common.AbstractSensorAttributeValueProto.AbstractSensorAttributeValue getAttributeValuesOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, generated.proto.common.AbstractSensorAttributeValueProto.AbstractSensorAttributeValue> map =
          internalGetAttributeValues().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (sensorName_ != null) {
        output.writeMessage(1, getSensorName());
      }
      if (sensorType_ != null) {
        output.writeMessage(2, getSensorType());
      }
      if (elapsedTime_ != null) {
        output.writeMessage(3, getElapsedTime());
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetAttributeValues(),
          AttributeValuesDefaultEntryHolder.defaultEntry,
          4);
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (sensorName_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getSensorName());
      }
      if (sensorType_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getSensorType());
      }
      if (elapsedTime_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getElapsedTime());
      }
      for (java.util.Map.Entry<java.lang.String, generated.proto.common.AbstractSensorAttributeValueProto.AbstractSensorAttributeValue> entry
           : internalGetAttributeValues().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, generated.proto.common.AbstractSensorAttributeValueProto.AbstractSensorAttributeValue>
        attributeValues__ = AttributeValuesDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, attributeValues__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof generated.proto.common.UnfilteredSensorDataProto.UnfilteredSensorData)) {
        return super.equals(obj);
      }
      generated.proto.common.UnfilteredSensorDataProto.UnfilteredSensorData other = (generated.proto.common.UnfilteredSensorDataProto.UnfilteredSensorData) obj;

      if (hasSensorName() != other.hasSensorName()) return false;
      if (hasSensorName()) {
        if (!getSensorName()
            .equals(other.getSensorName())) return false;
      }
      if (hasSensorType() != other.hasSensorType()) return false;
      if (hasSensorType()) {
        if (!getSensorType()
            .equals(other.getSensorType())) return false;
      }
      if (hasElapsedTime() != other.hasElapsedTime()) return false;
      if (hasElapsedTime()) {
        if (!getElapsedTime()
            .equals(other.getElapsedTime())) return false;
      }
      if (!internalGetAttributeValues().equals(
          other.internalGetAttributeValues())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSensorName()) {
        hash = (37 * hash) + SENSOR_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getSensorName().hashCode();
      }
      if (hasSensorType()) {
        hash = (37 * hash) + SENSOR_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getSensorType().hashCode();
      }
      if (hasElapsedTime()) {
        hash = (37 * hash) + ELAPSED_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getElapsedTime().hashCode();
      }
      if (!internalGetAttributeValues().getMap().isEmpty()) {
        hash = (37 * hash) + ATTRIBUTE_VALUES_FIELD_NUMBER;
        hash = (53 * hash) + internalGetAttributeValues().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static generated.proto.common.UnfilteredSensorDataProto.UnfilteredSensorData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static generated.proto.common.UnfilteredSensorDataProto.UnfilteredSensorData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static generated.proto.common.UnfilteredSensorDataProto.UnfilteredSensorData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static generated.proto.common.UnfilteredSensorDataProto.UnfilteredSensorData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static generated.proto.common.UnfilteredSensorDataProto.UnfilteredSensorData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static generated.proto.common.UnfilteredSensorDataProto.UnfilteredSensorData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static generated.proto.common.UnfilteredSensorDataProto.UnfilteredSensorData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static generated.proto.common.UnfilteredSensorDataProto.UnfilteredSensorData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static generated.proto.common.UnfilteredSensorDataProto.UnfilteredSensorData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static generated.proto.common.UnfilteredSensorDataProto.UnfilteredSensorData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static generated.proto.common.UnfilteredSensorDataProto.UnfilteredSensorData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static generated.proto.common.UnfilteredSensorDataProto.UnfilteredSensorData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(generated.proto.common.UnfilteredSensorDataProto.UnfilteredSensorData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * This message contains information produced by raw sensor data. 
     * </pre>
     *
     * Protobuf type {@code UnfilteredSensorData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:UnfilteredSensorData)
        generated.proto.common.UnfilteredSensorDataProto.UnfilteredSensorDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return generated.proto.common.UnfilteredSensorDataProto.internal_static_UnfilteredSensorData_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 4:
            return internalGetAttributeValues();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 4:
            return internalGetMutableAttributeValues();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return generated.proto.common.UnfilteredSensorDataProto.internal_static_UnfilteredSensorData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                generated.proto.common.UnfilteredSensorDataProto.UnfilteredSensorData.class, generated.proto.common.UnfilteredSensorDataProto.UnfilteredSensorData.Builder.class);
      }

      // Construct using generated.proto.common.UnfilteredSensorDataProto.UnfilteredSensorData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (sensorNameBuilder_ == null) {
          sensorName_ = null;
        } else {
          sensorName_ = null;
          sensorNameBuilder_ = null;
        }
        if (sensorTypeBuilder_ == null) {
          sensorType_ = null;
        } else {
          sensorType_ = null;
          sensorTypeBuilder_ = null;
        }
        if (elapsedTimeBuilder_ == null) {
          elapsedTime_ = null;
        } else {
          elapsedTime_ = null;
          elapsedTimeBuilder_ = null;
        }
        internalGetMutableAttributeValues().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return generated.proto.common.UnfilteredSensorDataProto.internal_static_UnfilteredSensorData_descriptor;
      }

      @java.lang.Override
      public generated.proto.common.UnfilteredSensorDataProto.UnfilteredSensorData getDefaultInstanceForType() {
        return generated.proto.common.UnfilteredSensorDataProto.UnfilteredSensorData.getDefaultInstance();
      }

      @java.lang.Override
      public generated.proto.common.UnfilteredSensorDataProto.UnfilteredSensorData build() {
        generated.proto.common.UnfilteredSensorDataProto.UnfilteredSensorData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public generated.proto.common.UnfilteredSensorDataProto.UnfilteredSensorData buildPartial() {
        generated.proto.common.UnfilteredSensorDataProto.UnfilteredSensorData result = new generated.proto.common.UnfilteredSensorDataProto.UnfilteredSensorData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (sensorNameBuilder_ == null) {
          result.sensorName_ = sensorName_;
        } else {
          result.sensorName_ = sensorNameBuilder_.build();
        }
        if (sensorTypeBuilder_ == null) {
          result.sensorType_ = sensorType_;
        } else {
          result.sensorType_ = sensorTypeBuilder_.build();
        }
        if (elapsedTimeBuilder_ == null) {
          result.elapsedTime_ = elapsedTime_;
        } else {
          result.elapsedTime_ = elapsedTimeBuilder_.build();
        }
        result.attributeValues_ = internalGetAttributeValues();
        result.attributeValues_.makeImmutable();
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof generated.proto.common.UnfilteredSensorDataProto.UnfilteredSensorData) {
          return mergeFrom((generated.proto.common.UnfilteredSensorDataProto.UnfilteredSensorData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(generated.proto.common.UnfilteredSensorDataProto.UnfilteredSensorData other) {
        if (other == generated.proto.common.UnfilteredSensorDataProto.UnfilteredSensorData.getDefaultInstance()) return this;
        if (other.hasSensorName()) {
          mergeSensorName(other.getSensorName());
        }
        if (other.hasSensorType()) {
          mergeSensorType(other.getSensorType());
        }
        if (other.hasElapsedTime()) {
          mergeElapsedTime(other.getElapsedTime());
        }
        internalGetMutableAttributeValues().mergeFrom(
            other.internalGetAttributeValues());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        generated.proto.common.UnfilteredSensorDataProto.UnfilteredSensorData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (generated.proto.common.UnfilteredSensorDataProto.UnfilteredSensorData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.StringValue sensorName_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> sensorNameBuilder_;
      /**
       * <pre>
       * The name of the sensor. 
       * </pre>
       *
       * <code>.google.protobuf.StringValue sensor_name = 1;</code>
       */
      public boolean hasSensorName() {
        return sensorNameBuilder_ != null || sensorName_ != null;
      }
      /**
       * <pre>
       * The name of the sensor. 
       * </pre>
       *
       * <code>.google.protobuf.StringValue sensor_name = 1;</code>
       */
      public com.google.protobuf.StringValue getSensorName() {
        if (sensorNameBuilder_ == null) {
          return sensorName_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : sensorName_;
        } else {
          return sensorNameBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The name of the sensor. 
       * </pre>
       *
       * <code>.google.protobuf.StringValue sensor_name = 1;</code>
       */
      public Builder setSensorName(com.google.protobuf.StringValue value) {
        if (sensorNameBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sensorName_ = value;
          onChanged();
        } else {
          sensorNameBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The name of the sensor. 
       * </pre>
       *
       * <code>.google.protobuf.StringValue sensor_name = 1;</code>
       */
      public Builder setSensorName(
          com.google.protobuf.StringValue.Builder builderForValue) {
        if (sensorNameBuilder_ == null) {
          sensorName_ = builderForValue.build();
          onChanged();
        } else {
          sensorNameBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The name of the sensor. 
       * </pre>
       *
       * <code>.google.protobuf.StringValue sensor_name = 1;</code>
       */
      public Builder mergeSensorName(com.google.protobuf.StringValue value) {
        if (sensorNameBuilder_ == null) {
          if (sensorName_ != null) {
            sensorName_ =
              com.google.protobuf.StringValue.newBuilder(sensorName_).mergeFrom(value).buildPartial();
          } else {
            sensorName_ = value;
          }
          onChanged();
        } else {
          sensorNameBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The name of the sensor. 
       * </pre>
       *
       * <code>.google.protobuf.StringValue sensor_name = 1;</code>
       */
      public Builder clearSensorName() {
        if (sensorNameBuilder_ == null) {
          sensorName_ = null;
          onChanged();
        } else {
          sensorName_ = null;
          sensorNameBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The name of the sensor. 
       * </pre>
       *
       * <code>.google.protobuf.StringValue sensor_name = 1;</code>
       */
      public com.google.protobuf.StringValue.Builder getSensorNameBuilder() {
        
        onChanged();
        return getSensorNameFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The name of the sensor. 
       * </pre>
       *
       * <code>.google.protobuf.StringValue sensor_name = 1;</code>
       */
      public com.google.protobuf.StringValueOrBuilder getSensorNameOrBuilder() {
        if (sensorNameBuilder_ != null) {
          return sensorNameBuilder_.getMessageOrBuilder();
        } else {
          return sensorName_ == null ?
              com.google.protobuf.StringValue.getDefaultInstance() : sensorName_;
        }
      }
      /**
       * <pre>
       * The name of the sensor. 
       * </pre>
       *
       * <code>.google.protobuf.StringValue sensor_name = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> 
          getSensorNameFieldBuilder() {
        if (sensorNameBuilder_ == null) {
          sensorNameBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder>(
                  getSensorName(),
                  getParentForChildren(),
                  isClean());
          sensorName_ = null;
        }
        return sensorNameBuilder_;
      }

      private generated.proto.common.AbstractEnumObjectProto.AbstractEnumObject sensorType_;
      private com.google.protobuf.SingleFieldBuilderV3<
          generated.proto.common.AbstractEnumObjectProto.AbstractEnumObject, generated.proto.common.AbstractEnumObjectProto.AbstractEnumObject.Builder, generated.proto.common.AbstractEnumObjectProto.AbstractEnumObjectOrBuilder> sensorTypeBuilder_;
      /**
       * <pre>
       * The type of sensor. 
       * </pre>
       *
       * <code>.AbstractEnumObject sensor_type = 2;</code>
       */
      public boolean hasSensorType() {
        return sensorTypeBuilder_ != null || sensorType_ != null;
      }
      /**
       * <pre>
       * The type of sensor. 
       * </pre>
       *
       * <code>.AbstractEnumObject sensor_type = 2;</code>
       */
      public generated.proto.common.AbstractEnumObjectProto.AbstractEnumObject getSensorType() {
        if (sensorTypeBuilder_ == null) {
          return sensorType_ == null ? generated.proto.common.AbstractEnumObjectProto.AbstractEnumObject.getDefaultInstance() : sensorType_;
        } else {
          return sensorTypeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The type of sensor. 
       * </pre>
       *
       * <code>.AbstractEnumObject sensor_type = 2;</code>
       */
      public Builder setSensorType(generated.proto.common.AbstractEnumObjectProto.AbstractEnumObject value) {
        if (sensorTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sensorType_ = value;
          onChanged();
        } else {
          sensorTypeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The type of sensor. 
       * </pre>
       *
       * <code>.AbstractEnumObject sensor_type = 2;</code>
       */
      public Builder setSensorType(
          generated.proto.common.AbstractEnumObjectProto.AbstractEnumObject.Builder builderForValue) {
        if (sensorTypeBuilder_ == null) {
          sensorType_ = builderForValue.build();
          onChanged();
        } else {
          sensorTypeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The type of sensor. 
       * </pre>
       *
       * <code>.AbstractEnumObject sensor_type = 2;</code>
       */
      public Builder mergeSensorType(generated.proto.common.AbstractEnumObjectProto.AbstractEnumObject value) {
        if (sensorTypeBuilder_ == null) {
          if (sensorType_ != null) {
            sensorType_ =
              generated.proto.common.AbstractEnumObjectProto.AbstractEnumObject.newBuilder(sensorType_).mergeFrom(value).buildPartial();
          } else {
            sensorType_ = value;
          }
          onChanged();
        } else {
          sensorTypeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The type of sensor. 
       * </pre>
       *
       * <code>.AbstractEnumObject sensor_type = 2;</code>
       */
      public Builder clearSensorType() {
        if (sensorTypeBuilder_ == null) {
          sensorType_ = null;
          onChanged();
        } else {
          sensorType_ = null;
          sensorTypeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The type of sensor. 
       * </pre>
       *
       * <code>.AbstractEnumObject sensor_type = 2;</code>
       */
      public generated.proto.common.AbstractEnumObjectProto.AbstractEnumObject.Builder getSensorTypeBuilder() {
        
        onChanged();
        return getSensorTypeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The type of sensor. 
       * </pre>
       *
       * <code>.AbstractEnumObject sensor_type = 2;</code>
       */
      public generated.proto.common.AbstractEnumObjectProto.AbstractEnumObjectOrBuilder getSensorTypeOrBuilder() {
        if (sensorTypeBuilder_ != null) {
          return sensorTypeBuilder_.getMessageOrBuilder();
        } else {
          return sensorType_ == null ?
              generated.proto.common.AbstractEnumObjectProto.AbstractEnumObject.getDefaultInstance() : sensorType_;
        }
      }
      /**
       * <pre>
       * The type of sensor. 
       * </pre>
       *
       * <code>.AbstractEnumObject sensor_type = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          generated.proto.common.AbstractEnumObjectProto.AbstractEnumObject, generated.proto.common.AbstractEnumObjectProto.AbstractEnumObject.Builder, generated.proto.common.AbstractEnumObjectProto.AbstractEnumObjectOrBuilder> 
          getSensorTypeFieldBuilder() {
        if (sensorTypeBuilder_ == null) {
          sensorTypeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              generated.proto.common.AbstractEnumObjectProto.AbstractEnumObject, generated.proto.common.AbstractEnumObjectProto.AbstractEnumObject.Builder, generated.proto.common.AbstractEnumObjectProto.AbstractEnumObjectOrBuilder>(
                  getSensorType(),
                  getParentForChildren(),
                  isClean());
          sensorType_ = null;
        }
        return sensorTypeBuilder_;
      }

      private com.google.protobuf.Timestamp elapsedTime_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> elapsedTimeBuilder_;
      /**
       * <pre>
       * The amount of time that has passed. 
       * </pre>
       *
       * <code>.google.protobuf.Timestamp elapsed_time = 3;</code>
       */
      public boolean hasElapsedTime() {
        return elapsedTimeBuilder_ != null || elapsedTime_ != null;
      }
      /**
       * <pre>
       * The amount of time that has passed. 
       * </pre>
       *
       * <code>.google.protobuf.Timestamp elapsed_time = 3;</code>
       */
      public com.google.protobuf.Timestamp getElapsedTime() {
        if (elapsedTimeBuilder_ == null) {
          return elapsedTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : elapsedTime_;
        } else {
          return elapsedTimeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The amount of time that has passed. 
       * </pre>
       *
       * <code>.google.protobuf.Timestamp elapsed_time = 3;</code>
       */
      public Builder setElapsedTime(com.google.protobuf.Timestamp value) {
        if (elapsedTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          elapsedTime_ = value;
          onChanged();
        } else {
          elapsedTimeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The amount of time that has passed. 
       * </pre>
       *
       * <code>.google.protobuf.Timestamp elapsed_time = 3;</code>
       */
      public Builder setElapsedTime(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (elapsedTimeBuilder_ == null) {
          elapsedTime_ = builderForValue.build();
          onChanged();
        } else {
          elapsedTimeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The amount of time that has passed. 
       * </pre>
       *
       * <code>.google.protobuf.Timestamp elapsed_time = 3;</code>
       */
      public Builder mergeElapsedTime(com.google.protobuf.Timestamp value) {
        if (elapsedTimeBuilder_ == null) {
          if (elapsedTime_ != null) {
            elapsedTime_ =
              com.google.protobuf.Timestamp.newBuilder(elapsedTime_).mergeFrom(value).buildPartial();
          } else {
            elapsedTime_ = value;
          }
          onChanged();
        } else {
          elapsedTimeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The amount of time that has passed. 
       * </pre>
       *
       * <code>.google.protobuf.Timestamp elapsed_time = 3;</code>
       */
      public Builder clearElapsedTime() {
        if (elapsedTimeBuilder_ == null) {
          elapsedTime_ = null;
          onChanged();
        } else {
          elapsedTime_ = null;
          elapsedTimeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The amount of time that has passed. 
       * </pre>
       *
       * <code>.google.protobuf.Timestamp elapsed_time = 3;</code>
       */
      public com.google.protobuf.Timestamp.Builder getElapsedTimeBuilder() {
        
        onChanged();
        return getElapsedTimeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The amount of time that has passed. 
       * </pre>
       *
       * <code>.google.protobuf.Timestamp elapsed_time = 3;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getElapsedTimeOrBuilder() {
        if (elapsedTimeBuilder_ != null) {
          return elapsedTimeBuilder_.getMessageOrBuilder();
        } else {
          return elapsedTime_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : elapsedTime_;
        }
      }
      /**
       * <pre>
       * The amount of time that has passed. 
       * </pre>
       *
       * <code>.google.protobuf.Timestamp elapsed_time = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getElapsedTimeFieldBuilder() {
        if (elapsedTimeBuilder_ == null) {
          elapsedTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getElapsedTime(),
                  getParentForChildren(),
                  isClean());
          elapsedTime_ = null;
        }
        return elapsedTimeBuilder_;
      }

      private com.google.protobuf.MapField<
          java.lang.String, generated.proto.common.AbstractSensorAttributeValueProto.AbstractSensorAttributeValue> attributeValues_;
      private com.google.protobuf.MapField<java.lang.String, generated.proto.common.AbstractSensorAttributeValueProto.AbstractSensorAttributeValue>
      internalGetAttributeValues() {
        if (attributeValues_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              AttributeValuesDefaultEntryHolder.defaultEntry);
        }
        return attributeValues_;
      }
      private com.google.protobuf.MapField<java.lang.String, generated.proto.common.AbstractSensorAttributeValueProto.AbstractSensorAttributeValue>
      internalGetMutableAttributeValues() {
        onChanged();;
        if (attributeValues_ == null) {
          attributeValues_ = com.google.protobuf.MapField.newMapField(
              AttributeValuesDefaultEntryHolder.defaultEntry);
        }
        if (!attributeValues_.isMutable()) {
          attributeValues_ = attributeValues_.copy();
        }
        return attributeValues_;
      }

      public int getAttributeValuesCount() {
        return internalGetAttributeValues().getMap().size();
      }
      /**
       * <pre>
       * The map of sensor attribute to values. 
       * </pre>
       *
       * <code>map&lt;string, .AbstractSensorAttributeValue&gt; attribute_values = 4;</code>
       */

      public boolean containsAttributeValues(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetAttributeValues().getMap().containsKey(key);
      }
      /**
       * Use {@link #getAttributeValuesMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, generated.proto.common.AbstractSensorAttributeValueProto.AbstractSensorAttributeValue> getAttributeValues() {
        return getAttributeValuesMap();
      }
      /**
       * <pre>
       * The map of sensor attribute to values. 
       * </pre>
       *
       * <code>map&lt;string, .AbstractSensorAttributeValue&gt; attribute_values = 4;</code>
       */

      public java.util.Map<java.lang.String, generated.proto.common.AbstractSensorAttributeValueProto.AbstractSensorAttributeValue> getAttributeValuesMap() {
        return internalGetAttributeValues().getMap();
      }
      /**
       * <pre>
       * The map of sensor attribute to values. 
       * </pre>
       *
       * <code>map&lt;string, .AbstractSensorAttributeValue&gt; attribute_values = 4;</code>
       */

      public generated.proto.common.AbstractSensorAttributeValueProto.AbstractSensorAttributeValue getAttributeValuesOrDefault(
          java.lang.String key,
          generated.proto.common.AbstractSensorAttributeValueProto.AbstractSensorAttributeValue defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, generated.proto.common.AbstractSensorAttributeValueProto.AbstractSensorAttributeValue> map =
            internalGetAttributeValues().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * The map of sensor attribute to values. 
       * </pre>
       *
       * <code>map&lt;string, .AbstractSensorAttributeValue&gt; attribute_values = 4;</code>
       */

      public generated.proto.common.AbstractSensorAttributeValueProto.AbstractSensorAttributeValue getAttributeValuesOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, generated.proto.common.AbstractSensorAttributeValueProto.AbstractSensorAttributeValue> map =
            internalGetAttributeValues().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearAttributeValues() {
        internalGetMutableAttributeValues().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * The map of sensor attribute to values. 
       * </pre>
       *
       * <code>map&lt;string, .AbstractSensorAttributeValue&gt; attribute_values = 4;</code>
       */

      public Builder removeAttributeValues(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableAttributeValues().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, generated.proto.common.AbstractSensorAttributeValueProto.AbstractSensorAttributeValue>
      getMutableAttributeValues() {
        return internalGetMutableAttributeValues().getMutableMap();
      }
      /**
       * <pre>
       * The map of sensor attribute to values. 
       * </pre>
       *
       * <code>map&lt;string, .AbstractSensorAttributeValue&gt; attribute_values = 4;</code>
       */
      public Builder putAttributeValues(
          java.lang.String key,
          generated.proto.common.AbstractSensorAttributeValueProto.AbstractSensorAttributeValue value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableAttributeValues().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * The map of sensor attribute to values. 
       * </pre>
       *
       * <code>map&lt;string, .AbstractSensorAttributeValue&gt; attribute_values = 4;</code>
       */

      public Builder putAllAttributeValues(
          java.util.Map<java.lang.String, generated.proto.common.AbstractSensorAttributeValueProto.AbstractSensorAttributeValue> values) {
        internalGetMutableAttributeValues().getMutableMap()
            .putAll(values);
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:UnfilteredSensorData)
    }

    // @@protoc_insertion_point(class_scope:UnfilteredSensorData)
    private static final generated.proto.common.UnfilteredSensorDataProto.UnfilteredSensorData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new generated.proto.common.UnfilteredSensorDataProto.UnfilteredSensorData();
    }

    public static generated.proto.common.UnfilteredSensorDataProto.UnfilteredSensorData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<UnfilteredSensorData>
        PARSER = new com.google.protobuf.AbstractParser<UnfilteredSensorData>() {
      @java.lang.Override
      public UnfilteredSensorData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UnfilteredSensorData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<UnfilteredSensorData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<UnfilteredSensorData> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public generated.proto.common.UnfilteredSensorDataProto.UnfilteredSensorData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_UnfilteredSensorData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_UnfilteredSensorData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_UnfilteredSensorData_AttributeValuesEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_UnfilteredSensorData_AttributeValuesEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\032UnfilteredSensorData.proto\032\030AbstractEn" +
      "umObject.proto\032\"AbstractSensorAttributeV" +
      "alue.proto\032\036google/protobuf/wrappers.pro" +
      "to\032\037google/protobuf/timestamp.proto\"\302\002\n\024" +
      "UnfilteredSensorData\0221\n\013sensor_name\030\001 \001(" +
      "\0132\034.google.protobuf.StringValue\022(\n\013senso" +
      "r_type\030\002 \001(\0132\023.AbstractEnumObject\0220\n\014ela" +
      "psed_time\030\003 \001(\0132\032.google.protobuf.Timest" +
      "amp\022D\n\020attribute_values\030\004 \003(\0132*.Unfilter" +
      "edSensorData.AttributeValuesEntry\032U\n\024Att" +
      "ributeValuesEntry\022\013\n\003key\030\001 \001(\t\022,\n\005value\030" +
      "\002 \001(\0132\035.AbstractSensorAttributeValue:\0028\001" +
      "B3\n\026generated.proto.commonB\031UnfilteredSe" +
      "nsorDataProtob\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          generated.proto.common.AbstractEnumObjectProto.getDescriptor(),
          generated.proto.common.AbstractSensorAttributeValueProto.getDescriptor(),
          com.google.protobuf.WrappersProto.getDescriptor(),
          com.google.protobuf.TimestampProto.getDescriptor(),
        }, assigner);
    internal_static_UnfilteredSensorData_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_UnfilteredSensorData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_UnfilteredSensorData_descriptor,
        new java.lang.String[] { "SensorName", "SensorType", "ElapsedTime", "AttributeValues", });
    internal_static_UnfilteredSensorData_AttributeValuesEntry_descriptor =
      internal_static_UnfilteredSensorData_descriptor.getNestedTypes().get(0);
    internal_static_UnfilteredSensorData_AttributeValuesEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_UnfilteredSensorData_AttributeValuesEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    generated.proto.common.AbstractEnumObjectProto.getDescriptor();
    generated.proto.common.AbstractSensorAttributeValueProto.getDescriptor();
    com.google.protobuf.WrappersProto.getDescriptor();
    com.google.protobuf.TimestampProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
