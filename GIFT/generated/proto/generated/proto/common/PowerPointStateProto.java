// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PowerPointState.proto

package generated.proto.common;

public final class PowerPointStateProto {
  private PowerPointStateProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface PowerPointStateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:PowerPointState)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The index corresponding to the current slide. 
     * </pre>
     *
     * <code>.google.protobuf.Int32Value slide_index = 1;</code>
     */
    boolean hasSlideIndex();
    /**
     * <pre>
     * The index corresponding to the current slide. 
     * </pre>
     *
     * <code>.google.protobuf.Int32Value slide_index = 1;</code>
     */
    com.google.protobuf.Int32Value getSlideIndex();
    /**
     * <pre>
     * The index corresponding to the current slide. 
     * </pre>
     *
     * <code>.google.protobuf.Int32Value slide_index = 1;</code>
     */
    com.google.protobuf.Int32ValueOrBuilder getSlideIndexOrBuilder();

    /**
     * <pre>
     * The total count of slides. 
     * </pre>
     *
     * <code>.google.protobuf.Int32Value slide_count = 2;</code>
     */
    boolean hasSlideCount();
    /**
     * <pre>
     * The total count of slides. 
     * </pre>
     *
     * <code>.google.protobuf.Int32Value slide_count = 2;</code>
     */
    com.google.protobuf.Int32Value getSlideCount();
    /**
     * <pre>
     * The total count of slides. 
     * </pre>
     *
     * <code>.google.protobuf.Int32Value slide_count = 2;</code>
     */
    com.google.protobuf.Int32ValueOrBuilder getSlideCountOrBuilder();

    /**
     * <pre>
     * The error message for the state. 
     * </pre>
     *
     * <code>.google.protobuf.StringValue error_msg = 3;</code>
     */
    boolean hasErrorMsg();
    /**
     * <pre>
     * The error message for the state. 
     * </pre>
     *
     * <code>.google.protobuf.StringValue error_msg = 3;</code>
     */
    com.google.protobuf.StringValue getErrorMsg();
    /**
     * <pre>
     * The error message for the state. 
     * </pre>
     *
     * <code>.google.protobuf.StringValue error_msg = 3;</code>
     */
    com.google.protobuf.StringValueOrBuilder getErrorMsgOrBuilder();
  }
  /**
   * <pre>
   * This message represents the current state of the PowerPoint. 
   * </pre>
   *
   * Protobuf type {@code PowerPointState}
   */
  public  static final class PowerPointState extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:PowerPointState)
      PowerPointStateOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PowerPointState.newBuilder() to construct.
    private PowerPointState(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PowerPointState() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PowerPointState(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.Int32Value.Builder subBuilder = null;
              if (slideIndex_ != null) {
                subBuilder = slideIndex_.toBuilder();
              }
              slideIndex_ = input.readMessage(com.google.protobuf.Int32Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(slideIndex_);
                slideIndex_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              com.google.protobuf.Int32Value.Builder subBuilder = null;
              if (slideCount_ != null) {
                subBuilder = slideCount_.toBuilder();
              }
              slideCount_ = input.readMessage(com.google.protobuf.Int32Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(slideCount_);
                slideCount_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              com.google.protobuf.StringValue.Builder subBuilder = null;
              if (errorMsg_ != null) {
                subBuilder = errorMsg_.toBuilder();
              }
              errorMsg_ = input.readMessage(com.google.protobuf.StringValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(errorMsg_);
                errorMsg_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return generated.proto.common.PowerPointStateProto.internal_static_PowerPointState_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return generated.proto.common.PowerPointStateProto.internal_static_PowerPointState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              generated.proto.common.PowerPointStateProto.PowerPointState.class, generated.proto.common.PowerPointStateProto.PowerPointState.Builder.class);
    }

    public static final int SLIDE_INDEX_FIELD_NUMBER = 1;
    private com.google.protobuf.Int32Value slideIndex_;
    /**
     * <pre>
     * The index corresponding to the current slide. 
     * </pre>
     *
     * <code>.google.protobuf.Int32Value slide_index = 1;</code>
     */
    public boolean hasSlideIndex() {
      return slideIndex_ != null;
    }
    /**
     * <pre>
     * The index corresponding to the current slide. 
     * </pre>
     *
     * <code>.google.protobuf.Int32Value slide_index = 1;</code>
     */
    public com.google.protobuf.Int32Value getSlideIndex() {
      return slideIndex_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : slideIndex_;
    }
    /**
     * <pre>
     * The index corresponding to the current slide. 
     * </pre>
     *
     * <code>.google.protobuf.Int32Value slide_index = 1;</code>
     */
    public com.google.protobuf.Int32ValueOrBuilder getSlideIndexOrBuilder() {
      return getSlideIndex();
    }

    public static final int SLIDE_COUNT_FIELD_NUMBER = 2;
    private com.google.protobuf.Int32Value slideCount_;
    /**
     * <pre>
     * The total count of slides. 
     * </pre>
     *
     * <code>.google.protobuf.Int32Value slide_count = 2;</code>
     */
    public boolean hasSlideCount() {
      return slideCount_ != null;
    }
    /**
     * <pre>
     * The total count of slides. 
     * </pre>
     *
     * <code>.google.protobuf.Int32Value slide_count = 2;</code>
     */
    public com.google.protobuf.Int32Value getSlideCount() {
      return slideCount_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : slideCount_;
    }
    /**
     * <pre>
     * The total count of slides. 
     * </pre>
     *
     * <code>.google.protobuf.Int32Value slide_count = 2;</code>
     */
    public com.google.protobuf.Int32ValueOrBuilder getSlideCountOrBuilder() {
      return getSlideCount();
    }

    public static final int ERROR_MSG_FIELD_NUMBER = 3;
    private com.google.protobuf.StringValue errorMsg_;
    /**
     * <pre>
     * The error message for the state. 
     * </pre>
     *
     * <code>.google.protobuf.StringValue error_msg = 3;</code>
     */
    public boolean hasErrorMsg() {
      return errorMsg_ != null;
    }
    /**
     * <pre>
     * The error message for the state. 
     * </pre>
     *
     * <code>.google.protobuf.StringValue error_msg = 3;</code>
     */
    public com.google.protobuf.StringValue getErrorMsg() {
      return errorMsg_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : errorMsg_;
    }
    /**
     * <pre>
     * The error message for the state. 
     * </pre>
     *
     * <code>.google.protobuf.StringValue error_msg = 3;</code>
     */
    public com.google.protobuf.StringValueOrBuilder getErrorMsgOrBuilder() {
      return getErrorMsg();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (slideIndex_ != null) {
        output.writeMessage(1, getSlideIndex());
      }
      if (slideCount_ != null) {
        output.writeMessage(2, getSlideCount());
      }
      if (errorMsg_ != null) {
        output.writeMessage(3, getErrorMsg());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (slideIndex_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getSlideIndex());
      }
      if (slideCount_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getSlideCount());
      }
      if (errorMsg_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getErrorMsg());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof generated.proto.common.PowerPointStateProto.PowerPointState)) {
        return super.equals(obj);
      }
      generated.proto.common.PowerPointStateProto.PowerPointState other = (generated.proto.common.PowerPointStateProto.PowerPointState) obj;

      if (hasSlideIndex() != other.hasSlideIndex()) return false;
      if (hasSlideIndex()) {
        if (!getSlideIndex()
            .equals(other.getSlideIndex())) return false;
      }
      if (hasSlideCount() != other.hasSlideCount()) return false;
      if (hasSlideCount()) {
        if (!getSlideCount()
            .equals(other.getSlideCount())) return false;
      }
      if (hasErrorMsg() != other.hasErrorMsg()) return false;
      if (hasErrorMsg()) {
        if (!getErrorMsg()
            .equals(other.getErrorMsg())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSlideIndex()) {
        hash = (37 * hash) + SLIDE_INDEX_FIELD_NUMBER;
        hash = (53 * hash) + getSlideIndex().hashCode();
      }
      if (hasSlideCount()) {
        hash = (37 * hash) + SLIDE_COUNT_FIELD_NUMBER;
        hash = (53 * hash) + getSlideCount().hashCode();
      }
      if (hasErrorMsg()) {
        hash = (37 * hash) + ERROR_MSG_FIELD_NUMBER;
        hash = (53 * hash) + getErrorMsg().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static generated.proto.common.PowerPointStateProto.PowerPointState parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static generated.proto.common.PowerPointStateProto.PowerPointState parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static generated.proto.common.PowerPointStateProto.PowerPointState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static generated.proto.common.PowerPointStateProto.PowerPointState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static generated.proto.common.PowerPointStateProto.PowerPointState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static generated.proto.common.PowerPointStateProto.PowerPointState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static generated.proto.common.PowerPointStateProto.PowerPointState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static generated.proto.common.PowerPointStateProto.PowerPointState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static generated.proto.common.PowerPointStateProto.PowerPointState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static generated.proto.common.PowerPointStateProto.PowerPointState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static generated.proto.common.PowerPointStateProto.PowerPointState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static generated.proto.common.PowerPointStateProto.PowerPointState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(generated.proto.common.PowerPointStateProto.PowerPointState prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * This message represents the current state of the PowerPoint. 
     * </pre>
     *
     * Protobuf type {@code PowerPointState}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:PowerPointState)
        generated.proto.common.PowerPointStateProto.PowerPointStateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return generated.proto.common.PowerPointStateProto.internal_static_PowerPointState_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return generated.proto.common.PowerPointStateProto.internal_static_PowerPointState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                generated.proto.common.PowerPointStateProto.PowerPointState.class, generated.proto.common.PowerPointStateProto.PowerPointState.Builder.class);
      }

      // Construct using generated.proto.common.PowerPointStateProto.PowerPointState.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (slideIndexBuilder_ == null) {
          slideIndex_ = null;
        } else {
          slideIndex_ = null;
          slideIndexBuilder_ = null;
        }
        if (slideCountBuilder_ == null) {
          slideCount_ = null;
        } else {
          slideCount_ = null;
          slideCountBuilder_ = null;
        }
        if (errorMsgBuilder_ == null) {
          errorMsg_ = null;
        } else {
          errorMsg_ = null;
          errorMsgBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return generated.proto.common.PowerPointStateProto.internal_static_PowerPointState_descriptor;
      }

      @java.lang.Override
      public generated.proto.common.PowerPointStateProto.PowerPointState getDefaultInstanceForType() {
        return generated.proto.common.PowerPointStateProto.PowerPointState.getDefaultInstance();
      }

      @java.lang.Override
      public generated.proto.common.PowerPointStateProto.PowerPointState build() {
        generated.proto.common.PowerPointStateProto.PowerPointState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public generated.proto.common.PowerPointStateProto.PowerPointState buildPartial() {
        generated.proto.common.PowerPointStateProto.PowerPointState result = new generated.proto.common.PowerPointStateProto.PowerPointState(this);
        if (slideIndexBuilder_ == null) {
          result.slideIndex_ = slideIndex_;
        } else {
          result.slideIndex_ = slideIndexBuilder_.build();
        }
        if (slideCountBuilder_ == null) {
          result.slideCount_ = slideCount_;
        } else {
          result.slideCount_ = slideCountBuilder_.build();
        }
        if (errorMsgBuilder_ == null) {
          result.errorMsg_ = errorMsg_;
        } else {
          result.errorMsg_ = errorMsgBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof generated.proto.common.PowerPointStateProto.PowerPointState) {
          return mergeFrom((generated.proto.common.PowerPointStateProto.PowerPointState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(generated.proto.common.PowerPointStateProto.PowerPointState other) {
        if (other == generated.proto.common.PowerPointStateProto.PowerPointState.getDefaultInstance()) return this;
        if (other.hasSlideIndex()) {
          mergeSlideIndex(other.getSlideIndex());
        }
        if (other.hasSlideCount()) {
          mergeSlideCount(other.getSlideCount());
        }
        if (other.hasErrorMsg()) {
          mergeErrorMsg(other.getErrorMsg());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        generated.proto.common.PowerPointStateProto.PowerPointState parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (generated.proto.common.PowerPointStateProto.PowerPointState) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.Int32Value slideIndex_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> slideIndexBuilder_;
      /**
       * <pre>
       * The index corresponding to the current slide. 
       * </pre>
       *
       * <code>.google.protobuf.Int32Value slide_index = 1;</code>
       */
      public boolean hasSlideIndex() {
        return slideIndexBuilder_ != null || slideIndex_ != null;
      }
      /**
       * <pre>
       * The index corresponding to the current slide. 
       * </pre>
       *
       * <code>.google.protobuf.Int32Value slide_index = 1;</code>
       */
      public com.google.protobuf.Int32Value getSlideIndex() {
        if (slideIndexBuilder_ == null) {
          return slideIndex_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : slideIndex_;
        } else {
          return slideIndexBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The index corresponding to the current slide. 
       * </pre>
       *
       * <code>.google.protobuf.Int32Value slide_index = 1;</code>
       */
      public Builder setSlideIndex(com.google.protobuf.Int32Value value) {
        if (slideIndexBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          slideIndex_ = value;
          onChanged();
        } else {
          slideIndexBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The index corresponding to the current slide. 
       * </pre>
       *
       * <code>.google.protobuf.Int32Value slide_index = 1;</code>
       */
      public Builder setSlideIndex(
          com.google.protobuf.Int32Value.Builder builderForValue) {
        if (slideIndexBuilder_ == null) {
          slideIndex_ = builderForValue.build();
          onChanged();
        } else {
          slideIndexBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The index corresponding to the current slide. 
       * </pre>
       *
       * <code>.google.protobuf.Int32Value slide_index = 1;</code>
       */
      public Builder mergeSlideIndex(com.google.protobuf.Int32Value value) {
        if (slideIndexBuilder_ == null) {
          if (slideIndex_ != null) {
            slideIndex_ =
              com.google.protobuf.Int32Value.newBuilder(slideIndex_).mergeFrom(value).buildPartial();
          } else {
            slideIndex_ = value;
          }
          onChanged();
        } else {
          slideIndexBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The index corresponding to the current slide. 
       * </pre>
       *
       * <code>.google.protobuf.Int32Value slide_index = 1;</code>
       */
      public Builder clearSlideIndex() {
        if (slideIndexBuilder_ == null) {
          slideIndex_ = null;
          onChanged();
        } else {
          slideIndex_ = null;
          slideIndexBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The index corresponding to the current slide. 
       * </pre>
       *
       * <code>.google.protobuf.Int32Value slide_index = 1;</code>
       */
      public com.google.protobuf.Int32Value.Builder getSlideIndexBuilder() {
        
        onChanged();
        return getSlideIndexFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The index corresponding to the current slide. 
       * </pre>
       *
       * <code>.google.protobuf.Int32Value slide_index = 1;</code>
       */
      public com.google.protobuf.Int32ValueOrBuilder getSlideIndexOrBuilder() {
        if (slideIndexBuilder_ != null) {
          return slideIndexBuilder_.getMessageOrBuilder();
        } else {
          return slideIndex_ == null ?
              com.google.protobuf.Int32Value.getDefaultInstance() : slideIndex_;
        }
      }
      /**
       * <pre>
       * The index corresponding to the current slide. 
       * </pre>
       *
       * <code>.google.protobuf.Int32Value slide_index = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> 
          getSlideIndexFieldBuilder() {
        if (slideIndexBuilder_ == null) {
          slideIndexBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder>(
                  getSlideIndex(),
                  getParentForChildren(),
                  isClean());
          slideIndex_ = null;
        }
        return slideIndexBuilder_;
      }

      private com.google.protobuf.Int32Value slideCount_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> slideCountBuilder_;
      /**
       * <pre>
       * The total count of slides. 
       * </pre>
       *
       * <code>.google.protobuf.Int32Value slide_count = 2;</code>
       */
      public boolean hasSlideCount() {
        return slideCountBuilder_ != null || slideCount_ != null;
      }
      /**
       * <pre>
       * The total count of slides. 
       * </pre>
       *
       * <code>.google.protobuf.Int32Value slide_count = 2;</code>
       */
      public com.google.protobuf.Int32Value getSlideCount() {
        if (slideCountBuilder_ == null) {
          return slideCount_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : slideCount_;
        } else {
          return slideCountBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The total count of slides. 
       * </pre>
       *
       * <code>.google.protobuf.Int32Value slide_count = 2;</code>
       */
      public Builder setSlideCount(com.google.protobuf.Int32Value value) {
        if (slideCountBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          slideCount_ = value;
          onChanged();
        } else {
          slideCountBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The total count of slides. 
       * </pre>
       *
       * <code>.google.protobuf.Int32Value slide_count = 2;</code>
       */
      public Builder setSlideCount(
          com.google.protobuf.Int32Value.Builder builderForValue) {
        if (slideCountBuilder_ == null) {
          slideCount_ = builderForValue.build();
          onChanged();
        } else {
          slideCountBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The total count of slides. 
       * </pre>
       *
       * <code>.google.protobuf.Int32Value slide_count = 2;</code>
       */
      public Builder mergeSlideCount(com.google.protobuf.Int32Value value) {
        if (slideCountBuilder_ == null) {
          if (slideCount_ != null) {
            slideCount_ =
              com.google.protobuf.Int32Value.newBuilder(slideCount_).mergeFrom(value).buildPartial();
          } else {
            slideCount_ = value;
          }
          onChanged();
        } else {
          slideCountBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The total count of slides. 
       * </pre>
       *
       * <code>.google.protobuf.Int32Value slide_count = 2;</code>
       */
      public Builder clearSlideCount() {
        if (slideCountBuilder_ == null) {
          slideCount_ = null;
          onChanged();
        } else {
          slideCount_ = null;
          slideCountBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The total count of slides. 
       * </pre>
       *
       * <code>.google.protobuf.Int32Value slide_count = 2;</code>
       */
      public com.google.protobuf.Int32Value.Builder getSlideCountBuilder() {
        
        onChanged();
        return getSlideCountFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The total count of slides. 
       * </pre>
       *
       * <code>.google.protobuf.Int32Value slide_count = 2;</code>
       */
      public com.google.protobuf.Int32ValueOrBuilder getSlideCountOrBuilder() {
        if (slideCountBuilder_ != null) {
          return slideCountBuilder_.getMessageOrBuilder();
        } else {
          return slideCount_ == null ?
              com.google.protobuf.Int32Value.getDefaultInstance() : slideCount_;
        }
      }
      /**
       * <pre>
       * The total count of slides. 
       * </pre>
       *
       * <code>.google.protobuf.Int32Value slide_count = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> 
          getSlideCountFieldBuilder() {
        if (slideCountBuilder_ == null) {
          slideCountBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder>(
                  getSlideCount(),
                  getParentForChildren(),
                  isClean());
          slideCount_ = null;
        }
        return slideCountBuilder_;
      }

      private com.google.protobuf.StringValue errorMsg_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> errorMsgBuilder_;
      /**
       * <pre>
       * The error message for the state. 
       * </pre>
       *
       * <code>.google.protobuf.StringValue error_msg = 3;</code>
       */
      public boolean hasErrorMsg() {
        return errorMsgBuilder_ != null || errorMsg_ != null;
      }
      /**
       * <pre>
       * The error message for the state. 
       * </pre>
       *
       * <code>.google.protobuf.StringValue error_msg = 3;</code>
       */
      public com.google.protobuf.StringValue getErrorMsg() {
        if (errorMsgBuilder_ == null) {
          return errorMsg_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : errorMsg_;
        } else {
          return errorMsgBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The error message for the state. 
       * </pre>
       *
       * <code>.google.protobuf.StringValue error_msg = 3;</code>
       */
      public Builder setErrorMsg(com.google.protobuf.StringValue value) {
        if (errorMsgBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          errorMsg_ = value;
          onChanged();
        } else {
          errorMsgBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The error message for the state. 
       * </pre>
       *
       * <code>.google.protobuf.StringValue error_msg = 3;</code>
       */
      public Builder setErrorMsg(
          com.google.protobuf.StringValue.Builder builderForValue) {
        if (errorMsgBuilder_ == null) {
          errorMsg_ = builderForValue.build();
          onChanged();
        } else {
          errorMsgBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The error message for the state. 
       * </pre>
       *
       * <code>.google.protobuf.StringValue error_msg = 3;</code>
       */
      public Builder mergeErrorMsg(com.google.protobuf.StringValue value) {
        if (errorMsgBuilder_ == null) {
          if (errorMsg_ != null) {
            errorMsg_ =
              com.google.protobuf.StringValue.newBuilder(errorMsg_).mergeFrom(value).buildPartial();
          } else {
            errorMsg_ = value;
          }
          onChanged();
        } else {
          errorMsgBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The error message for the state. 
       * </pre>
       *
       * <code>.google.protobuf.StringValue error_msg = 3;</code>
       */
      public Builder clearErrorMsg() {
        if (errorMsgBuilder_ == null) {
          errorMsg_ = null;
          onChanged();
        } else {
          errorMsg_ = null;
          errorMsgBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The error message for the state. 
       * </pre>
       *
       * <code>.google.protobuf.StringValue error_msg = 3;</code>
       */
      public com.google.protobuf.StringValue.Builder getErrorMsgBuilder() {
        
        onChanged();
        return getErrorMsgFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The error message for the state. 
       * </pre>
       *
       * <code>.google.protobuf.StringValue error_msg = 3;</code>
       */
      public com.google.protobuf.StringValueOrBuilder getErrorMsgOrBuilder() {
        if (errorMsgBuilder_ != null) {
          return errorMsgBuilder_.getMessageOrBuilder();
        } else {
          return errorMsg_ == null ?
              com.google.protobuf.StringValue.getDefaultInstance() : errorMsg_;
        }
      }
      /**
       * <pre>
       * The error message for the state. 
       * </pre>
       *
       * <code>.google.protobuf.StringValue error_msg = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> 
          getErrorMsgFieldBuilder() {
        if (errorMsgBuilder_ == null) {
          errorMsgBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder>(
                  getErrorMsg(),
                  getParentForChildren(),
                  isClean());
          errorMsg_ = null;
        }
        return errorMsgBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:PowerPointState)
    }

    // @@protoc_insertion_point(class_scope:PowerPointState)
    private static final generated.proto.common.PowerPointStateProto.PowerPointState DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new generated.proto.common.PowerPointStateProto.PowerPointState();
    }

    public static generated.proto.common.PowerPointStateProto.PowerPointState getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PowerPointState>
        PARSER = new com.google.protobuf.AbstractParser<PowerPointState>() {
      @java.lang.Override
      public PowerPointState parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PowerPointState(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PowerPointState> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PowerPointState> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public generated.proto.common.PowerPointStateProto.PowerPointState getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_PowerPointState_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_PowerPointState_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\025PowerPointState.proto\032\036google/protobuf" +
      "/wrappers.proto\"\246\001\n\017PowerPointState\0220\n\013s" +
      "lide_index\030\001 \001(\0132\033.google.protobuf.Int32" +
      "Value\0220\n\013slide_count\030\002 \001(\0132\033.google.prot" +
      "obuf.Int32Value\022/\n\terror_msg\030\003 \001(\0132\034.goo" +
      "gle.protobuf.StringValueB.\n\026generated.pr" +
      "oto.commonB\024PowerPointStateProtob\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.WrappersProto.getDescriptor(),
        }, assigner);
    internal_static_PowerPointState_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_PowerPointState_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_PowerPointState_descriptor,
        new java.lang.String[] { "SlideIndex", "SlideCount", "ErrorMsg", });
    com.google.protobuf.WrappersProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
