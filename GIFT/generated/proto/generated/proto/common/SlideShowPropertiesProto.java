// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SlideShowProperties.proto

package generated.proto.common;

public final class SlideShowPropertiesProto {
  private SlideShowPropertiesProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface SlideShowPropertiesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SlideShowProperties)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Value indicating if the previous button should be displayed. 
     * </pre>
     *
     * <code>.google.protobuf.StringValue display_previous_button = 1;</code>
     */
    boolean hasDisplayPreviousButton();
    /**
     * <pre>
     * Value indicating if the previous button should be displayed. 
     * </pre>
     *
     * <code>.google.protobuf.StringValue display_previous_button = 1;</code>
     */
    com.google.protobuf.StringValue getDisplayPreviousButton();
    /**
     * <pre>
     * Value indicating if the previous button should be displayed. 
     * </pre>
     *
     * <code>.google.protobuf.StringValue display_previous_button = 1;</code>
     */
    com.google.protobuf.StringValueOrBuilder getDisplayPreviousButtonOrBuilder();

    /**
     * <pre>
     * Value indicating if the continue button should be kept. 
     * </pre>
     *
     * <code>.google.protobuf.StringValue keep_continue_button = 2;</code>
     */
    boolean hasKeepContinueButton();
    /**
     * <pre>
     * Value indicating if the continue button should be kept. 
     * </pre>
     *
     * <code>.google.protobuf.StringValue keep_continue_button = 2;</code>
     */
    com.google.protobuf.StringValue getKeepContinueButton();
    /**
     * <pre>
     * Value indicating if the continue button should be kept. 
     * </pre>
     *
     * <code>.google.protobuf.StringValue keep_continue_button = 2;</code>
     */
    com.google.protobuf.StringValueOrBuilder getKeepContinueButtonOrBuilder();

    /**
     * <pre>
     * The slide paths. 
     * </pre>
     *
     * <code>repeated string slide_paths = 3;</code>
     */
    java.util.List<java.lang.String>
        getSlidePathsList();
    /**
     * <pre>
     * The slide paths. 
     * </pre>
     *
     * <code>repeated string slide_paths = 3;</code>
     */
    int getSlidePathsCount();
    /**
     * <pre>
     * The slide paths. 
     * </pre>
     *
     * <code>repeated string slide_paths = 3;</code>
     */
    java.lang.String getSlidePaths(int index);
    /**
     * <pre>
     * The slide paths. 
     * </pre>
     *
     * <code>repeated string slide_paths = 3;</code>
     */
    com.google.protobuf.ByteString
        getSlidePathsBytes(int index);
  }
  /**
   * <pre>
   * This represents the properties that may be observed for a slide show. 
   * </pre>
   *
   * Protobuf type {@code SlideShowProperties}
   */
  public  static final class SlideShowProperties extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SlideShowProperties)
      SlideShowPropertiesOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SlideShowProperties.newBuilder() to construct.
    private SlideShowProperties(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SlideShowProperties() {
      slidePaths_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SlideShowProperties(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.StringValue.Builder subBuilder = null;
              if (displayPreviousButton_ != null) {
                subBuilder = displayPreviousButton_.toBuilder();
              }
              displayPreviousButton_ = input.readMessage(com.google.protobuf.StringValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(displayPreviousButton_);
                displayPreviousButton_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              com.google.protobuf.StringValue.Builder subBuilder = null;
              if (keepContinueButton_ != null) {
                subBuilder = keepContinueButton_.toBuilder();
              }
              keepContinueButton_ = input.readMessage(com.google.protobuf.StringValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(keepContinueButton_);
                keepContinueButton_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                slidePaths_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000004;
              }
              slidePaths_.add(s);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          slidePaths_ = slidePaths_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return generated.proto.common.SlideShowPropertiesProto.internal_static_SlideShowProperties_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return generated.proto.common.SlideShowPropertiesProto.internal_static_SlideShowProperties_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              generated.proto.common.SlideShowPropertiesProto.SlideShowProperties.class, generated.proto.common.SlideShowPropertiesProto.SlideShowProperties.Builder.class);
    }

    private int bitField0_;
    public static final int DISPLAY_PREVIOUS_BUTTON_FIELD_NUMBER = 1;
    private com.google.protobuf.StringValue displayPreviousButton_;
    /**
     * <pre>
     * Value indicating if the previous button should be displayed. 
     * </pre>
     *
     * <code>.google.protobuf.StringValue display_previous_button = 1;</code>
     */
    public boolean hasDisplayPreviousButton() {
      return displayPreviousButton_ != null;
    }
    /**
     * <pre>
     * Value indicating if the previous button should be displayed. 
     * </pre>
     *
     * <code>.google.protobuf.StringValue display_previous_button = 1;</code>
     */
    public com.google.protobuf.StringValue getDisplayPreviousButton() {
      return displayPreviousButton_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : displayPreviousButton_;
    }
    /**
     * <pre>
     * Value indicating if the previous button should be displayed. 
     * </pre>
     *
     * <code>.google.protobuf.StringValue display_previous_button = 1;</code>
     */
    public com.google.protobuf.StringValueOrBuilder getDisplayPreviousButtonOrBuilder() {
      return getDisplayPreviousButton();
    }

    public static final int KEEP_CONTINUE_BUTTON_FIELD_NUMBER = 2;
    private com.google.protobuf.StringValue keepContinueButton_;
    /**
     * <pre>
     * Value indicating if the continue button should be kept. 
     * </pre>
     *
     * <code>.google.protobuf.StringValue keep_continue_button = 2;</code>
     */
    public boolean hasKeepContinueButton() {
      return keepContinueButton_ != null;
    }
    /**
     * <pre>
     * Value indicating if the continue button should be kept. 
     * </pre>
     *
     * <code>.google.protobuf.StringValue keep_continue_button = 2;</code>
     */
    public com.google.protobuf.StringValue getKeepContinueButton() {
      return keepContinueButton_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : keepContinueButton_;
    }
    /**
     * <pre>
     * Value indicating if the continue button should be kept. 
     * </pre>
     *
     * <code>.google.protobuf.StringValue keep_continue_button = 2;</code>
     */
    public com.google.protobuf.StringValueOrBuilder getKeepContinueButtonOrBuilder() {
      return getKeepContinueButton();
    }

    public static final int SLIDE_PATHS_FIELD_NUMBER = 3;
    private com.google.protobuf.LazyStringList slidePaths_;
    /**
     * <pre>
     * The slide paths. 
     * </pre>
     *
     * <code>repeated string slide_paths = 3;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getSlidePathsList() {
      return slidePaths_;
    }
    /**
     * <pre>
     * The slide paths. 
     * </pre>
     *
     * <code>repeated string slide_paths = 3;</code>
     */
    public int getSlidePathsCount() {
      return slidePaths_.size();
    }
    /**
     * <pre>
     * The slide paths. 
     * </pre>
     *
     * <code>repeated string slide_paths = 3;</code>
     */
    public java.lang.String getSlidePaths(int index) {
      return slidePaths_.get(index);
    }
    /**
     * <pre>
     * The slide paths. 
     * </pre>
     *
     * <code>repeated string slide_paths = 3;</code>
     */
    public com.google.protobuf.ByteString
        getSlidePathsBytes(int index) {
      return slidePaths_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (displayPreviousButton_ != null) {
        output.writeMessage(1, getDisplayPreviousButton());
      }
      if (keepContinueButton_ != null) {
        output.writeMessage(2, getKeepContinueButton());
      }
      for (int i = 0; i < slidePaths_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, slidePaths_.getRaw(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (displayPreviousButton_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getDisplayPreviousButton());
      }
      if (keepContinueButton_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getKeepContinueButton());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < slidePaths_.size(); i++) {
          dataSize += computeStringSizeNoTag(slidePaths_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getSlidePathsList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof generated.proto.common.SlideShowPropertiesProto.SlideShowProperties)) {
        return super.equals(obj);
      }
      generated.proto.common.SlideShowPropertiesProto.SlideShowProperties other = (generated.proto.common.SlideShowPropertiesProto.SlideShowProperties) obj;

      if (hasDisplayPreviousButton() != other.hasDisplayPreviousButton()) return false;
      if (hasDisplayPreviousButton()) {
        if (!getDisplayPreviousButton()
            .equals(other.getDisplayPreviousButton())) return false;
      }
      if (hasKeepContinueButton() != other.hasKeepContinueButton()) return false;
      if (hasKeepContinueButton()) {
        if (!getKeepContinueButton()
            .equals(other.getKeepContinueButton())) return false;
      }
      if (!getSlidePathsList()
          .equals(other.getSlidePathsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasDisplayPreviousButton()) {
        hash = (37 * hash) + DISPLAY_PREVIOUS_BUTTON_FIELD_NUMBER;
        hash = (53 * hash) + getDisplayPreviousButton().hashCode();
      }
      if (hasKeepContinueButton()) {
        hash = (37 * hash) + KEEP_CONTINUE_BUTTON_FIELD_NUMBER;
        hash = (53 * hash) + getKeepContinueButton().hashCode();
      }
      if (getSlidePathsCount() > 0) {
        hash = (37 * hash) + SLIDE_PATHS_FIELD_NUMBER;
        hash = (53 * hash) + getSlidePathsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static generated.proto.common.SlideShowPropertiesProto.SlideShowProperties parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static generated.proto.common.SlideShowPropertiesProto.SlideShowProperties parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static generated.proto.common.SlideShowPropertiesProto.SlideShowProperties parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static generated.proto.common.SlideShowPropertiesProto.SlideShowProperties parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static generated.proto.common.SlideShowPropertiesProto.SlideShowProperties parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static generated.proto.common.SlideShowPropertiesProto.SlideShowProperties parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static generated.proto.common.SlideShowPropertiesProto.SlideShowProperties parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static generated.proto.common.SlideShowPropertiesProto.SlideShowProperties parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static generated.proto.common.SlideShowPropertiesProto.SlideShowProperties parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static generated.proto.common.SlideShowPropertiesProto.SlideShowProperties parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static generated.proto.common.SlideShowPropertiesProto.SlideShowProperties parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static generated.proto.common.SlideShowPropertiesProto.SlideShowProperties parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(generated.proto.common.SlideShowPropertiesProto.SlideShowProperties prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * This represents the properties that may be observed for a slide show. 
     * </pre>
     *
     * Protobuf type {@code SlideShowProperties}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SlideShowProperties)
        generated.proto.common.SlideShowPropertiesProto.SlideShowPropertiesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return generated.proto.common.SlideShowPropertiesProto.internal_static_SlideShowProperties_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return generated.proto.common.SlideShowPropertiesProto.internal_static_SlideShowProperties_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                generated.proto.common.SlideShowPropertiesProto.SlideShowProperties.class, generated.proto.common.SlideShowPropertiesProto.SlideShowProperties.Builder.class);
      }

      // Construct using generated.proto.common.SlideShowPropertiesProto.SlideShowProperties.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (displayPreviousButtonBuilder_ == null) {
          displayPreviousButton_ = null;
        } else {
          displayPreviousButton_ = null;
          displayPreviousButtonBuilder_ = null;
        }
        if (keepContinueButtonBuilder_ == null) {
          keepContinueButton_ = null;
        } else {
          keepContinueButton_ = null;
          keepContinueButtonBuilder_ = null;
        }
        slidePaths_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return generated.proto.common.SlideShowPropertiesProto.internal_static_SlideShowProperties_descriptor;
      }

      @java.lang.Override
      public generated.proto.common.SlideShowPropertiesProto.SlideShowProperties getDefaultInstanceForType() {
        return generated.proto.common.SlideShowPropertiesProto.SlideShowProperties.getDefaultInstance();
      }

      @java.lang.Override
      public generated.proto.common.SlideShowPropertiesProto.SlideShowProperties build() {
        generated.proto.common.SlideShowPropertiesProto.SlideShowProperties result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public generated.proto.common.SlideShowPropertiesProto.SlideShowProperties buildPartial() {
        generated.proto.common.SlideShowPropertiesProto.SlideShowProperties result = new generated.proto.common.SlideShowPropertiesProto.SlideShowProperties(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (displayPreviousButtonBuilder_ == null) {
          result.displayPreviousButton_ = displayPreviousButton_;
        } else {
          result.displayPreviousButton_ = displayPreviousButtonBuilder_.build();
        }
        if (keepContinueButtonBuilder_ == null) {
          result.keepContinueButton_ = keepContinueButton_;
        } else {
          result.keepContinueButton_ = keepContinueButtonBuilder_.build();
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          slidePaths_ = slidePaths_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.slidePaths_ = slidePaths_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof generated.proto.common.SlideShowPropertiesProto.SlideShowProperties) {
          return mergeFrom((generated.proto.common.SlideShowPropertiesProto.SlideShowProperties)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(generated.proto.common.SlideShowPropertiesProto.SlideShowProperties other) {
        if (other == generated.proto.common.SlideShowPropertiesProto.SlideShowProperties.getDefaultInstance()) return this;
        if (other.hasDisplayPreviousButton()) {
          mergeDisplayPreviousButton(other.getDisplayPreviousButton());
        }
        if (other.hasKeepContinueButton()) {
          mergeKeepContinueButton(other.getKeepContinueButton());
        }
        if (!other.slidePaths_.isEmpty()) {
          if (slidePaths_.isEmpty()) {
            slidePaths_ = other.slidePaths_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureSlidePathsIsMutable();
            slidePaths_.addAll(other.slidePaths_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        generated.proto.common.SlideShowPropertiesProto.SlideShowProperties parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (generated.proto.common.SlideShowPropertiesProto.SlideShowProperties) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.StringValue displayPreviousButton_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> displayPreviousButtonBuilder_;
      /**
       * <pre>
       * Value indicating if the previous button should be displayed. 
       * </pre>
       *
       * <code>.google.protobuf.StringValue display_previous_button = 1;</code>
       */
      public boolean hasDisplayPreviousButton() {
        return displayPreviousButtonBuilder_ != null || displayPreviousButton_ != null;
      }
      /**
       * <pre>
       * Value indicating if the previous button should be displayed. 
       * </pre>
       *
       * <code>.google.protobuf.StringValue display_previous_button = 1;</code>
       */
      public com.google.protobuf.StringValue getDisplayPreviousButton() {
        if (displayPreviousButtonBuilder_ == null) {
          return displayPreviousButton_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : displayPreviousButton_;
        } else {
          return displayPreviousButtonBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Value indicating if the previous button should be displayed. 
       * </pre>
       *
       * <code>.google.protobuf.StringValue display_previous_button = 1;</code>
       */
      public Builder setDisplayPreviousButton(com.google.protobuf.StringValue value) {
        if (displayPreviousButtonBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          displayPreviousButton_ = value;
          onChanged();
        } else {
          displayPreviousButtonBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Value indicating if the previous button should be displayed. 
       * </pre>
       *
       * <code>.google.protobuf.StringValue display_previous_button = 1;</code>
       */
      public Builder setDisplayPreviousButton(
          com.google.protobuf.StringValue.Builder builderForValue) {
        if (displayPreviousButtonBuilder_ == null) {
          displayPreviousButton_ = builderForValue.build();
          onChanged();
        } else {
          displayPreviousButtonBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Value indicating if the previous button should be displayed. 
       * </pre>
       *
       * <code>.google.protobuf.StringValue display_previous_button = 1;</code>
       */
      public Builder mergeDisplayPreviousButton(com.google.protobuf.StringValue value) {
        if (displayPreviousButtonBuilder_ == null) {
          if (displayPreviousButton_ != null) {
            displayPreviousButton_ =
              com.google.protobuf.StringValue.newBuilder(displayPreviousButton_).mergeFrom(value).buildPartial();
          } else {
            displayPreviousButton_ = value;
          }
          onChanged();
        } else {
          displayPreviousButtonBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Value indicating if the previous button should be displayed. 
       * </pre>
       *
       * <code>.google.protobuf.StringValue display_previous_button = 1;</code>
       */
      public Builder clearDisplayPreviousButton() {
        if (displayPreviousButtonBuilder_ == null) {
          displayPreviousButton_ = null;
          onChanged();
        } else {
          displayPreviousButton_ = null;
          displayPreviousButtonBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Value indicating if the previous button should be displayed. 
       * </pre>
       *
       * <code>.google.protobuf.StringValue display_previous_button = 1;</code>
       */
      public com.google.protobuf.StringValue.Builder getDisplayPreviousButtonBuilder() {
        
        onChanged();
        return getDisplayPreviousButtonFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Value indicating if the previous button should be displayed. 
       * </pre>
       *
       * <code>.google.protobuf.StringValue display_previous_button = 1;</code>
       */
      public com.google.protobuf.StringValueOrBuilder getDisplayPreviousButtonOrBuilder() {
        if (displayPreviousButtonBuilder_ != null) {
          return displayPreviousButtonBuilder_.getMessageOrBuilder();
        } else {
          return displayPreviousButton_ == null ?
              com.google.protobuf.StringValue.getDefaultInstance() : displayPreviousButton_;
        }
      }
      /**
       * <pre>
       * Value indicating if the previous button should be displayed. 
       * </pre>
       *
       * <code>.google.protobuf.StringValue display_previous_button = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> 
          getDisplayPreviousButtonFieldBuilder() {
        if (displayPreviousButtonBuilder_ == null) {
          displayPreviousButtonBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder>(
                  getDisplayPreviousButton(),
                  getParentForChildren(),
                  isClean());
          displayPreviousButton_ = null;
        }
        return displayPreviousButtonBuilder_;
      }

      private com.google.protobuf.StringValue keepContinueButton_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> keepContinueButtonBuilder_;
      /**
       * <pre>
       * Value indicating if the continue button should be kept. 
       * </pre>
       *
       * <code>.google.protobuf.StringValue keep_continue_button = 2;</code>
       */
      public boolean hasKeepContinueButton() {
        return keepContinueButtonBuilder_ != null || keepContinueButton_ != null;
      }
      /**
       * <pre>
       * Value indicating if the continue button should be kept. 
       * </pre>
       *
       * <code>.google.protobuf.StringValue keep_continue_button = 2;</code>
       */
      public com.google.protobuf.StringValue getKeepContinueButton() {
        if (keepContinueButtonBuilder_ == null) {
          return keepContinueButton_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : keepContinueButton_;
        } else {
          return keepContinueButtonBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Value indicating if the continue button should be kept. 
       * </pre>
       *
       * <code>.google.protobuf.StringValue keep_continue_button = 2;</code>
       */
      public Builder setKeepContinueButton(com.google.protobuf.StringValue value) {
        if (keepContinueButtonBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          keepContinueButton_ = value;
          onChanged();
        } else {
          keepContinueButtonBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Value indicating if the continue button should be kept. 
       * </pre>
       *
       * <code>.google.protobuf.StringValue keep_continue_button = 2;</code>
       */
      public Builder setKeepContinueButton(
          com.google.protobuf.StringValue.Builder builderForValue) {
        if (keepContinueButtonBuilder_ == null) {
          keepContinueButton_ = builderForValue.build();
          onChanged();
        } else {
          keepContinueButtonBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Value indicating if the continue button should be kept. 
       * </pre>
       *
       * <code>.google.protobuf.StringValue keep_continue_button = 2;</code>
       */
      public Builder mergeKeepContinueButton(com.google.protobuf.StringValue value) {
        if (keepContinueButtonBuilder_ == null) {
          if (keepContinueButton_ != null) {
            keepContinueButton_ =
              com.google.protobuf.StringValue.newBuilder(keepContinueButton_).mergeFrom(value).buildPartial();
          } else {
            keepContinueButton_ = value;
          }
          onChanged();
        } else {
          keepContinueButtonBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Value indicating if the continue button should be kept. 
       * </pre>
       *
       * <code>.google.protobuf.StringValue keep_continue_button = 2;</code>
       */
      public Builder clearKeepContinueButton() {
        if (keepContinueButtonBuilder_ == null) {
          keepContinueButton_ = null;
          onChanged();
        } else {
          keepContinueButton_ = null;
          keepContinueButtonBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Value indicating if the continue button should be kept. 
       * </pre>
       *
       * <code>.google.protobuf.StringValue keep_continue_button = 2;</code>
       */
      public com.google.protobuf.StringValue.Builder getKeepContinueButtonBuilder() {
        
        onChanged();
        return getKeepContinueButtonFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Value indicating if the continue button should be kept. 
       * </pre>
       *
       * <code>.google.protobuf.StringValue keep_continue_button = 2;</code>
       */
      public com.google.protobuf.StringValueOrBuilder getKeepContinueButtonOrBuilder() {
        if (keepContinueButtonBuilder_ != null) {
          return keepContinueButtonBuilder_.getMessageOrBuilder();
        } else {
          return keepContinueButton_ == null ?
              com.google.protobuf.StringValue.getDefaultInstance() : keepContinueButton_;
        }
      }
      /**
       * <pre>
       * Value indicating if the continue button should be kept. 
       * </pre>
       *
       * <code>.google.protobuf.StringValue keep_continue_button = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> 
          getKeepContinueButtonFieldBuilder() {
        if (keepContinueButtonBuilder_ == null) {
          keepContinueButtonBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder>(
                  getKeepContinueButton(),
                  getParentForChildren(),
                  isClean());
          keepContinueButton_ = null;
        }
        return keepContinueButtonBuilder_;
      }

      private com.google.protobuf.LazyStringList slidePaths_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureSlidePathsIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          slidePaths_ = new com.google.protobuf.LazyStringArrayList(slidePaths_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <pre>
       * The slide paths. 
       * </pre>
       *
       * <code>repeated string slide_paths = 3;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getSlidePathsList() {
        return slidePaths_.getUnmodifiableView();
      }
      /**
       * <pre>
       * The slide paths. 
       * </pre>
       *
       * <code>repeated string slide_paths = 3;</code>
       */
      public int getSlidePathsCount() {
        return slidePaths_.size();
      }
      /**
       * <pre>
       * The slide paths. 
       * </pre>
       *
       * <code>repeated string slide_paths = 3;</code>
       */
      public java.lang.String getSlidePaths(int index) {
        return slidePaths_.get(index);
      }
      /**
       * <pre>
       * The slide paths. 
       * </pre>
       *
       * <code>repeated string slide_paths = 3;</code>
       */
      public com.google.protobuf.ByteString
          getSlidePathsBytes(int index) {
        return slidePaths_.getByteString(index);
      }
      /**
       * <pre>
       * The slide paths. 
       * </pre>
       *
       * <code>repeated string slide_paths = 3;</code>
       */
      public Builder setSlidePaths(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSlidePathsIsMutable();
        slidePaths_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The slide paths. 
       * </pre>
       *
       * <code>repeated string slide_paths = 3;</code>
       */
      public Builder addSlidePaths(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSlidePathsIsMutable();
        slidePaths_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The slide paths. 
       * </pre>
       *
       * <code>repeated string slide_paths = 3;</code>
       */
      public Builder addAllSlidePaths(
          java.lang.Iterable<java.lang.String> values) {
        ensureSlidePathsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, slidePaths_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The slide paths. 
       * </pre>
       *
       * <code>repeated string slide_paths = 3;</code>
       */
      public Builder clearSlidePaths() {
        slidePaths_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The slide paths. 
       * </pre>
       *
       * <code>repeated string slide_paths = 3;</code>
       */
      public Builder addSlidePathsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureSlidePathsIsMutable();
        slidePaths_.add(value);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SlideShowProperties)
    }

    // @@protoc_insertion_point(class_scope:SlideShowProperties)
    private static final generated.proto.common.SlideShowPropertiesProto.SlideShowProperties DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new generated.proto.common.SlideShowPropertiesProto.SlideShowProperties();
    }

    public static generated.proto.common.SlideShowPropertiesProto.SlideShowProperties getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SlideShowProperties>
        PARSER = new com.google.protobuf.AbstractParser<SlideShowProperties>() {
      @java.lang.Override
      public SlideShowProperties parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SlideShowProperties(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SlideShowProperties> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SlideShowProperties> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public generated.proto.common.SlideShowPropertiesProto.SlideShowProperties getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SlideShowProperties_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SlideShowProperties_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\031SlideShowProperties.proto\032\036google/prot" +
      "obuf/wrappers.proto\"\245\001\n\023SlideShowPropert" +
      "ies\022=\n\027display_previous_button\030\001 \001(\0132\034.g" +
      "oogle.protobuf.StringValue\022:\n\024keep_conti" +
      "nue_button\030\002 \001(\0132\034.google.protobuf.Strin" +
      "gValue\022\023\n\013slide_paths\030\003 \003(\tB2\n\026generated" +
      ".proto.commonB\030SlideShowPropertiesProtob" +
      "\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.WrappersProto.getDescriptor(),
        }, assigner);
    internal_static_SlideShowProperties_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_SlideShowProperties_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SlideShowProperties_descriptor,
        new java.lang.String[] { "DisplayPreviousButton", "KeepContinueButton", "SlidePaths", });
    com.google.protobuf.WrappersProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
